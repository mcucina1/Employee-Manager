package edu.colostate.cs415.model;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description must not be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Worker worker2 = null;
        edu.colostate.cs415.model.Project project3 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker2, project3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project3 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray11 = new edu.colostate.cs415.model.Qualification[] { qualification10 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet12 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet12, qualificationArray11);
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project15 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet12, projectSize14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        edu.colostate.cs415.model.Qualification[] qualificationArray9 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification8 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet10 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet10, qualificationArray9);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet10, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification3.addWorker(worker4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.lang.Class<?> wildcardClass5 = workerSet4.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification3.removeWorker(worker5);
        edu.colostate.cs415.model.Worker worker7 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification3.addWorker(worker7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        int int0 = edu.colostate.cs415.model.Worker.MAX_WORKLOAD;
        org.junit.Assert.assertTrue("'" + int0 + "' != '" + 12 + "'", int0 == 12);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Worker worker7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.Class<?> wildcardClass2 = company1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Worker worker7 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification3.addWorker(worker7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("", qualificationSet47, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project40 = company1.createProject("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, projectSize39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = new edu.colostate.cs415.model.Project("hi!", qualificationSet47, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        // The following exception was thrown during execution in test generation
        try {
            worker30.setSalary((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker41, project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = worker30.willOverload(project46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        boolean boolean7 = company1.equals((java.lang.Object) true);
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize32 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project33 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, projectSize32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.Class<?> wildcardClass7 = qualification6.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification45.toDTO();
        boolean boolean47 = qualification38.equals((java.lang.Object) qualificationDTO46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification38.toDTO();
        worker34.addQualification(qualification38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker34.getQualifications();
        java.lang.String str51 = worker34.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker34.getQualifications();
        java.lang.String str53 = worker34.toString();
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker34, project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0:0:2:100" + "'", str51, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker34.getQualifications();
        edu.colostate.cs415.model.Project project36 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker34.addProject(project36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company6.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        java.lang.String str17 = qualification15.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification30.removeWorker(worker32);
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification15, qualification21, qualification26, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) 10);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker38, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize57 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project58 = company1.createProject("hi!:0:0:0:2:100", qualificationSet56, projectSize57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker40 = company6.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker42 = company1.createWorker("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(worker40);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        int int42 = worker41.getWorkload();
        qualification9.removeWorker(worker41);
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker41, project44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification45.toDTO();
        boolean boolean47 = qualification38.equals((java.lang.Object) qualificationDTO46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification38.toDTO();
        worker34.addQualification(qualification38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker34.getQualifications();
        java.lang.String str51 = worker34.toString();
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker34, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0:0:2:100" + "'", str51, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        worker40.addQualification(qualification44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker40.getQualifications();
        boolean boolean57 = company2.equals((java.lang.Object) qualificationSet56);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project59 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet56, projectSize58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.lang.String str58 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company56.getProjects();
        edu.colostate.cs415.model.Qualification qualification61 = company56.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray62 = new edu.colostate.cs415.model.Qualification[] { qualification40, qualification54, qualification61 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet63 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet63, qualificationArray62);
        edu.colostate.cs415.model.Worker worker66 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet63, (double) (byte) 100);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = qualification70.getWorkers();
        boolean boolean73 = qualification70.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO78 = qualification77.toDTO();
        boolean boolean79 = qualification70.equals((java.lang.Object) qualificationDTO78);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO80 = qualification70.toDTO();
        worker66.addQualification(qualification70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet82 = worker66.getQualifications();
        java.lang.String str83 = worker66.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = worker66.getQualifications();
        java.lang.String str85 = worker66.toString();
        boolean boolean86 = worker66.isAvailable();
        edu.colostate.cs415.model.Project project87 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker66, project87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet59);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualificationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(qualificationDTO78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(qualificationDTO80);
        org.junit.Assert.assertNotNull(qualificationSet82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!:0:0:0:2:100" + "'", str83, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:0:0:0:2:100" + "'", str85, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet47, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = worker30.willOverload(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project38 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet36, projectSize37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification44.toDTO();
        boolean boolean46 = qualification37.equals((java.lang.Object) qualificationDTO45);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification37.toDTO();
        worker33.addQualification(qualification37);
        boolean boolean49 = worker33.isAvailable();
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker33, project50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company6.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        java.lang.String str17 = qualification15.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification30.removeWorker(worker32);
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification15, qualification21, qualification26, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) 10);
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project40 = company1.createProject("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, projectSize39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Project project2 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company41.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        java.lang.String str52 = qualification50.toString();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        edu.colostate.cs415.model.Worker worker67 = null;
        qualification65.removeWorker(worker67);
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification46, qualification50, qualification56, qualification61, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = worker73.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker76 = company1.createWorker("", qualificationSet74, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualificationSet74);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        worker30.addQualification(qualification35);
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(qualification35);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        worker30.removeProject(project47);
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = worker30.willOverload(project49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        edu.colostate.cs415.model.ProjectSize projectSize36 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project37 = new edu.colostate.cs415.model.Project("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, projectSize36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.lang.String str42 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company40.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        java.lang.String str51 = qualification49.toString();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        edu.colostate.cs415.model.Worker worker66 = null;
        qualification64.removeWorker(worker66);
        edu.colostate.cs415.model.Qualification[] qualificationArray68 = new edu.colostate.cs415.model.Qualification[] { qualification45, qualification49, qualification55, qualification60, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet69 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet69, qualificationArray68);
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet69, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker72.getQualifications();
        edu.colostate.cs415.model.Project project74 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker72, project74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualificationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(qualificationSet73);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = new edu.colostate.cs415.model.Project("", qualificationSet47, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) workerSet9);
        java.lang.Object obj11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = qualification3.equals(obj11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: [Qualification.java] equals(): Cannot compare to null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.lang.String str54 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company52.getProjects();
        edu.colostate.cs415.model.Qualification qualification57 = company52.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = worker30.equals((java.lang.Object) qualification57);
        java.lang.Class<?> wildcardClass60 = worker30.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet55);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet5, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet40, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        java.lang.String str48 = worker31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize50 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project51 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet49, projectSize50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0:0:2:100" + "'", str48, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet49);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company10.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        java.lang.String str21 = qualification19.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification34.removeWorker(worker36);
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification19, qualification25, qualification30, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = worker42.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project45 = company1.createProject("hi!", qualificationSet43, projectSize44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        boolean boolean58 = qualification49.equals((java.lang.Object) qualificationDTO57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification49.toDTO();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getUnavailableWorkers();
        java.lang.String str67 = company65.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet68 = company65.getProjects();
        edu.colostate.cs415.model.Qualification qualification70 = company65.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray71 = new edu.colostate.cs415.model.Qualification[] { qualification49, qualification63, qualification70 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet72 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet72, qualificationArray71);
        edu.colostate.cs415.model.Worker worker75 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet72, (double) (byte) 100);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification79.getWorkers();
        boolean boolean82 = qualification79.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company84 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification86 = company84.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification86.toDTO();
        boolean boolean88 = qualification79.equals((java.lang.Object) qualificationDTO87);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification79.toDTO();
        worker75.addQualification(qualification79);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = worker75.getQualifications();
        java.lang.String str92 = worker75.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet93 = worker75.getQualifications();
        qualification43.removeWorker(worker75);
        worker75.setSalary((double) '#');
        edu.colostate.cs415.model.Project project97 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker75, project97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!:0:0" + "'", str67, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet68);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualification86);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(qualificationDTO89);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:0:0:2:100" + "'", str92, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet93);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        boolean boolean51 = worker35.isAvailable();
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker35, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean49 = worker30.willOverload(project48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean40 = qualification37.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification44.toDTO();
        boolean boolean46 = qualification37.equals((java.lang.Object) qualificationDTO45);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification37.toDTO();
        worker33.addQualification(qualification37);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker33.getQualifications();
        java.lang.String str50 = worker33.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker33.getQualifications();
        java.lang.String str52 = worker33.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO53 = worker33.toDTO();
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker33, project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0:0:2:100" + "'", str50, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO53);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = worker30.willOverload(project51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean76 = qualification73.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification80.toDTO();
        boolean boolean82 = qualification73.equals((java.lang.Object) qualificationDTO81);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO83 = qualification73.toDTO();
        worker69.addQualification(qualification73);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker69.getQualifications();
        java.lang.String str86 = worker69.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker69.getQualifications();
        java.lang.String str88 = worker69.toString();
        boolean boolean89 = worker69.isAvailable();
        boolean boolean90 = worker69.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = worker69.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize92 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project93 = company1.createProject("", qualificationSet91, projectSize92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualificationDTO83);
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!:0:0:0:2:100" + "'", str88, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(qualificationSet91);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker35.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO54 = worker35.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker35.toDTO();
        boolean boolean56 = company1.equals((java.lang.Object) worker35);
        edu.colostate.cs415.model.Project project57 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(workerDTO54);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.lang.String str54 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company52.getProjects();
        edu.colostate.cs415.model.Qualification qualification57 = company52.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = worker30.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification57.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet55);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass39 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.lang.Object obj37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = company1.equals(obj37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: [Comapny.java] equals(): Cannot compare to null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        java.lang.Object obj39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = company1.equals(obj39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: [Comapny.java] equals(): Cannot compare to null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker37, project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        worker40.addQualification(qualification44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker40.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = company2.createWorker("hi!:0:0:0:2:10", qualificationSet56, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet56, (double) (short) 10);
        edu.colostate.cs415.model.Project project61 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker60.addProject(project61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(worker58);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company39.getProjects();
        java.lang.String str42 = company39.getName();
        java.lang.String str43 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getAvailableWorkers();
        boolean boolean45 = company1.equals((java.lang.Object) company39);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification47 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Project project3 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        int int69 = worker48.getWorkload();
        edu.colostate.cs415.model.Project project70 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean71 = worker48.willOverload(project70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        java.lang.String str54 = worker37.toString();
        java.lang.String str55 = worker37.getName();
        boolean boolean56 = worker37.isAvailable();
        edu.colostate.cs415.model.Project project57 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker37, project57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0:0:2:100" + "'", str54, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0" + "'", str55, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = worker36.willOverload(project56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean76 = qualification73.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification80.toDTO();
        boolean boolean82 = qualification73.equals((java.lang.Object) qualificationDTO81);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO83 = qualification73.toDTO();
        worker69.addQualification(qualification73);
        boolean boolean85 = worker69.isAvailable();
        worker69.setSalary((double) (byte) 100);
        edu.colostate.cs415.model.Project project88 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker69, project88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualificationDTO83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        boolean boolean11 = company2.equals((java.lang.Object) boolean10);
        java.lang.String str12 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker35.toDTO();
        java.lang.String str57 = worker35.getName();
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker35.addProject(project58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        // The following exception was thrown during execution in test generation
        try {
            worker35.setSalary((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.lang.String str48 = worker30.getName();
        boolean boolean49 = worker30.isAvailable();
        boolean boolean50 = worker30.isAvailable();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker35.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project39 = new edu.colostate.cs415.model.Project("", qualificationSet37, projectSize38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO74 = qualification73.toDTO();
        java.lang.String str75 = qualification73.toString();
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification79.getWorkers();
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = qualification88.getWorkers();
        edu.colostate.cs415.model.Worker worker90 = null;
        qualification88.removeWorker(worker90);
        edu.colostate.cs415.model.Qualification[] qualificationArray92 = new edu.colostate.cs415.model.Qualification[] { qualification69, qualification73, qualification79, qualification84, qualification88 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet93 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet93, qualificationArray92);
        edu.colostate.cs415.model.Worker worker96 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet93, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO97 = worker96.toDTO();
        edu.colostate.cs415.model.Project project98 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker96, project98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(qualificationDTO74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(qualificationArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(workerDTO97);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.lang.String str12 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        boolean boolean58 = qualification49.equals((java.lang.Object) qualificationDTO57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification49.toDTO();
        worker45.addQualification(qualification49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker45.getQualifications();
        edu.colostate.cs415.model.Worker worker63 = company7.createWorker("hi!:0:0:0:2:10", qualificationSet61, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize64 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project65 = company1.createProject("hi!:0:0", qualificationSet61, projectSize64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(worker63);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize6 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project7 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet5, projectSize6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.lang.String str58 = worker38.toString();
        int int59 = worker38.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0:0:2:100" + "'", str58, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project4 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean32 = worker30.willOverload(project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker38.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO47 = worker38.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = worker38.getProjects();
        int int49 = worker38.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertNotNull(workerDTO47);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company6.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        boolean boolean26 = qualification17.equals((java.lang.Object) qualificationDTO25);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.lang.String str35 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company33.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company33.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification17, qualification31, qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) (byte) 100);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        worker43.addQualification(qualification47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = worker43.getQualifications();
        java.lang.String str60 = worker43.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker43.getQualifications();
        qualification11.removeWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker43.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize64 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project65 = company1.createProject("", qualificationSet63, projectSize64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0:0:2:100" + "'", str60, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet63);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification19 = company14.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification23.toDTO();
        java.lang.String str25 = qualification23.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        edu.colostate.cs415.model.Worker worker40 = null;
        qualification38.removeWorker(worker40);
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification23, qualification29, qualification34, qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker46.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = company1.createProject("", qualificationSet47, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = worker35.willOverload(project38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0f);
        boolean boolean42 = company33.equals((java.lang.Object) boolean41);
        java.lang.String str43 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company33.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company33.getQualifications();
        boolean boolean46 = worker31.equals((java.lang.Object) qualificationSet45);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("", qualificationSet45, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        java.lang.String str6 = qualification4.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        boolean boolean54 = qualification4.equals((java.lang.Object) qualificationSet53);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project56 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100", qualificationSet53, projectSize55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        java.lang.String str6 = qualification4.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        boolean boolean54 = qualification4.equals((java.lang.Object) qualificationSet53);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project56 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet53, projectSize55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        boolean boolean56 = worker35.isAvailable();
        edu.colostate.cs415.model.Project project57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = worker35.willOverload(project57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Project project68 = null;
        worker67.removeProject(project68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company76.getUnassignedWorkers();
        boolean boolean80 = qualification73.equals((java.lang.Object) workerSet79);
        worker67.addQualification(qualification73);
        company1.unassignAll(worker67);
        worker67.setSalary((double) 10);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.lang.String str43 = qualification42.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        java.lang.String str91 = worker74.toString();
        qualification42.addWorker(worker74);
        edu.colostate.cs415.model.Project project93 = null;
        worker74.removeProject(project93);
        edu.colostate.cs415.model.Project project95 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker74, project95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0:0:2:100" + "'", str91, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project42 = new edu.colostate.cs415.model.Project("hi!", qualificationSet40, projectSize41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.lang.String str48 = worker30.getName();
        boolean boolean49 = worker30.isAvailable();
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        qualification16.removeWorker(worker48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker48.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize69 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project70 = company1.createProject("hi!:0:0:0:2:10", qualificationSet68, projectSize69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(qualificationSet68);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        boolean boolean26 = qualification17.equals((java.lang.Object) qualificationDTO25);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.lang.String str35 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company33.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company33.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification17, qualification31, qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker45 = company11.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 100);
        java.lang.String str46 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker50 = company1.createWorker("", qualificationSet48, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(worker45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker42 = company8.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) 100);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker44 = company1.createWorker("", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(worker42);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        java.lang.String str7 = company4.getName();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getAvailableWorkers();
        boolean boolean10 = company1.equals((java.lang.Object) workerSet9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.lang.String str65 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company63.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company63.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification47, qualification61, qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) (byte) 100);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification77.getWorkers();
        boolean boolean80 = qualification77.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification84.toDTO();
        boolean boolean86 = qualification77.equals((java.lang.Object) qualificationDTO85);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification77.toDTO();
        worker73.addQualification(qualification77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker73.getQualifications();
        java.lang.String str90 = worker73.toString();
        qualification40.removeWorker(worker73);
        java.lang.String str92 = worker73.toString();
        company1.unassignAll(worker73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!:0:0:0:2:100" + "'", str90, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:0:0:2:100" + "'", str92, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerSet94);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Project project2 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = worker30.willOverload(project50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project42 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet40, projectSize41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification34.getWorkers();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(workerSet46);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        qualification3.addWorker(worker41);
        java.lang.Class<?> wildcardClass44 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass4 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.lang.String str7 = qualification5.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        boolean boolean55 = qualification5.equals((java.lang.Object) qualificationSet54);
        edu.colostate.cs415.model.Worker worker57 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project59 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:10", qualificationSet54, projectSize58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = worker34.getQualifications();
        java.lang.String str36 = worker34.getName();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Project project33 = null;
        worker32.removeProject(project33);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker32.getProjects();
        boolean boolean36 = company1.equals((java.lang.Object) worker32);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = worker32.getProjects();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(projectSet37);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!:0:0");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        int int46 = worker45.getWorkload();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        worker45.addQualification(qualification50);
        qualification13.addWorker(worker45);
        boolean boolean53 = qualification6.equals((java.lang.Object) worker45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = worker45.getProjects();
        boolean boolean56 = worker45.equals((java.lang.Object) 1L);
        edu.colostate.cs415.model.Project project57 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker45.addProject(project57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        int int40 = worker39.getWorkload();
        qualification7.removeWorker(worker39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification7.getWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.lang.String str65 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company63.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company63.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification47, qualification61, qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) (byte) 100);
        int int74 = worker73.getWorkload();
        qualification7.removeWorker(worker73);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = worker73.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project78 = company1.createProject("", qualificationSet76, projectSize77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(qualificationSet76);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Worker worker6 = null;
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker6, project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        boolean boolean11 = company2.equals((java.lang.Object) boolean10);
        java.lang.String str12 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet14, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        boolean boolean69 = worker48.isAvailable();
        // The following exception was thrown during execution in test generation
        try {
            worker48.setSalary((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.lang.String str41 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company39.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company39.getProjects();
        java.lang.String str45 = company39.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company39.getAvailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company68.getUnavailableWorkers();
        java.lang.String str70 = company68.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = company68.getProjects();
        edu.colostate.cs415.model.Qualification qualification73 = company68.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray74 = new edu.colostate.cs415.model.Qualification[] { qualification52, qualification66, qualification73 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet75 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet75, qualificationArray74);
        edu.colostate.cs415.model.Worker worker78 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet75, (double) (byte) 100);
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company80.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = qualification85.getWorkers();
        boolean boolean88 = qualification85.equals((java.lang.Object) 10.0f);
        boolean boolean89 = company80.equals((java.lang.Object) boolean88);
        java.lang.String str90 = company80.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet91 = company80.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet92 = company80.getQualifications();
        boolean boolean93 = worker78.equals((java.lang.Object) qualificationSet92);
        edu.colostate.cs415.model.Worker worker95 = company39.createWorker("hi!", qualificationSet92, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize96 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project97 = company1.createProject("hi!:0:0:0:2:100", qualificationSet92, projectSize96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!:0:0" + "'", str70, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet71);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(qualificationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(workerSet86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNotNull(workerSet91);
        org.junit.Assert.assertNotNull(qualificationSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(worker95);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification7.toDTO();
        java.lang.String str9 = qualification7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification7.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        edu.colostate.cs415.model.Qualification qualification18 = company13.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        java.lang.String str24 = qualification22.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification37.removeWorker(worker39);
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification18, qualification22, qualification28, qualification33, qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker45.getQualifications();
        qualification7.addWorker(worker45);
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker45, project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass63 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        int int37 = worker36.getWorkload();
        qualification4.removeWorker(worker36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getUnavailableWorkers();
        java.lang.String str62 = company60.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company60.getProjects();
        edu.colostate.cs415.model.Qualification qualification65 = company60.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray66 = new edu.colostate.cs415.model.Qualification[] { qualification44, qualification58, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet67 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet67, qualificationArray66);
        edu.colostate.cs415.model.Worker worker70 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet67, (double) (byte) 100);
        int int71 = worker70.getWorkload();
        qualification4.removeWorker(worker70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker70.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize74 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project75 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet73, projectSize74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(qualificationSet73);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        boolean boolean56 = company47.equals((java.lang.Object) boolean55);
        java.lang.String str57 = company47.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company47.getQualifications();
        boolean boolean60 = worker38.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company47.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company47.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(workerSet62);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        java.lang.String str9 = qualification8.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        int int41 = worker40.getWorkload();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        worker40.addQualification(qualification45);
        qualification8.addWorker(worker40);
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker40.toDTO();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str51 = company50.getName();
        edu.colostate.cs415.model.Qualification qualification53 = company50.createQualification("hi!:0:0:0:2:100");
        boolean boolean54 = worker40.equals((java.lang.Object) "hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Project project55 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker40, project55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        int int69 = worker48.getWorkload();
        int int70 = worker48.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        boolean boolean46 = worker30.isAvailable();
        worker30.setSalary((double) (byte) 100);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = worker30.getProjects();
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(projectSet49);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.lang.String str12 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        java.lang.String str29 = qualification28.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getUnavailableWorkers();
        java.lang.String str52 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet53 = company50.getProjects();
        edu.colostate.cs415.model.Qualification qualification55 = company50.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray56 = new edu.colostate.cs415.model.Qualification[] { qualification34, qualification48, qualification55 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet57 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet57, qualificationArray56);
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet57, (double) (byte) 100);
        int int61 = worker60.getWorkload();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        worker60.addQualification(qualification65);
        qualification28.addWorker(worker60);
        boolean boolean68 = qualification21.equals((java.lang.Object) worker60);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet69 = worker60.getProjects();
        boolean boolean71 = worker60.equals((java.lang.Object) 1L);
        edu.colostate.cs415.model.Project project72 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker60, project72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0" + "'", str52, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet53);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(projectSet69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company6.createQualification("hi!:0:0");
        java.lang.String str12 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean20 = qualification17.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        boolean boolean26 = qualification17.equals((java.lang.Object) qualificationDTO25);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        java.lang.String str35 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company33.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company33.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification17, qualification31, qualification38 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) (byte) 100);
        int int44 = worker43.getWorkload();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        worker43.addQualification(qualification48);
        qualification11.addWorker(worker43);
        edu.colostate.cs415.dto.WorkerDTO workerDTO51 = worker43.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str54 = company53.getName();
        edu.colostate.cs415.model.Qualification qualification56 = company53.createQualification("hi!:0:0:0:2:100");
        boolean boolean57 = worker43.equals((java.lang.Object) "hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        boolean boolean62 = worker43.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Project project63 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker43, project63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerDTO51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company1.getUnassignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification41 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(projectSet37);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        boolean boolean50 = worker30.isAvailable();
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = worker30.willOverload(project51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize8 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project9 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100", qualificationSet7, projectSize8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.lang.String str65 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company63.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company63.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification47, qualification61, qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) (byte) 100);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification77.getWorkers();
        boolean boolean80 = qualification77.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification84.toDTO();
        boolean boolean86 = qualification77.equals((java.lang.Object) qualificationDTO85);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification77.toDTO();
        worker73.addQualification(qualification77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker73.getQualifications();
        java.lang.String str90 = worker73.toString();
        qualification40.removeWorker(worker73);
        java.lang.String str92 = worker73.toString();
        company1.unassignAll(worker73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!:0:0:0:2:100" + "'", str90, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:0:0:2:100" + "'", str92, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerSet94);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        int int32 = worker31.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project35 = new edu.colostate.cs415.model.Project("", qualificationSet33, projectSize34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.lang.String str12 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        java.lang.String str22 = qualification21.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean30 = qualification27.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification34.toDTO();
        boolean boolean36 = qualification27.equals((java.lang.Object) qualificationDTO35);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.lang.String str45 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company43.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company43.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray49 = new edu.colostate.cs415.model.Qualification[] { qualification27, qualification41, qualification48 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet50 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet50, qualificationArray49);
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet50, (double) (byte) 100);
        int int54 = worker53.getWorkload();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        worker53.addQualification(qualification58);
        qualification21.addWorker(worker53);
        edu.colostate.cs415.dto.WorkerDTO workerDTO61 = worker53.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        boolean boolean67 = company63.equals((java.lang.Object) 10L);
        java.lang.String str68 = company63.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company63.getUnavailableWorkers();
        boolean boolean70 = worker53.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Project project71 = null;
        // The following exception was thrown during execution in test generation
        try {
            company7.assign(worker53, project71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        java.lang.String str50 = worker30.toString();
        edu.colostate.cs415.model.Project project51 = null;
        worker30.removeProject(project51);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0:0:2:100" + "'", str50, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        java.lang.String str48 = worker31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker31.getQualifications();
        java.lang.String str50 = worker31.toString();
        boolean boolean51 = worker31.isAvailable();
        boolean boolean52 = worker31.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project55 = new edu.colostate.cs415.model.Project("hi!", qualificationSet53, projectSize54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0:0:2:100" + "'", str48, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0:0:2:100" + "'", str50, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.lang.String str22 = qualification20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification35.removeWorker(worker37);
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification20, qualification26, qualification31, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = worker43.getQualifications();
        boolean boolean45 = worker43.isAvailable();
        boolean boolean46 = company1.equals((java.lang.Object) worker43);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getUnavailableWorkers();
        java.lang.String str69 = company67.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet70 = company67.getProjects();
        edu.colostate.cs415.model.Qualification qualification72 = company67.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray73 = new edu.colostate.cs415.model.Qualification[] { qualification51, qualification65, qualification72 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet74 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet74, qualificationArray73);
        edu.colostate.cs415.model.Worker worker77 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet74, (double) (byte) 100);
        int int78 = worker77.getWorkload();
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str81 = company80.getName();
        boolean boolean82 = worker77.equals((java.lang.Object) str81);
        java.lang.String str83 = worker77.toString();
        edu.colostate.cs415.model.Project project84 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker77, project84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet70);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(qualificationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!:0:0:0:2:100" + "'", str83, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        java.lang.String str56 = worker39.toString();
        qualification7.addWorker(worker39);
        edu.colostate.cs415.model.Project project58 = null;
        worker39.removeProject(project58);
        boolean boolean60 = worker39.isAvailable();
        boolean boolean61 = qualification3.equals((java.lang.Object) boolean60);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0:0:2:100" + "'", str56, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (byte) 1);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project15 = company1.createProject("hi!", qualificationSet13, projectSize14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        java.lang.String str48 = worker31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker31.getQualifications();
        java.lang.String str50 = worker31.toString();
        boolean boolean51 = worker31.isAvailable();
        boolean boolean52 = worker31.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker31.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project55 = new edu.colostate.cs415.model.Project("", qualificationSet53, projectSize54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0:0:2:100" + "'", str48, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0:0:2:100" + "'", str50, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company1.getProjects();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO74 = qualification73.toDTO();
        java.lang.String str75 = qualification73.toString();
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification79.getWorkers();
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = qualification88.getWorkers();
        edu.colostate.cs415.model.Worker worker90 = null;
        qualification88.removeWorker(worker90);
        edu.colostate.cs415.model.Qualification[] qualificationArray92 = new edu.colostate.cs415.model.Qualification[] { qualification69, qualification73, qualification79, qualification84, qualification88 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet93 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet93, qualificationArray92);
        edu.colostate.cs415.model.Worker worker96 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet93, (double) 10);
        edu.colostate.cs415.model.Project project97 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker96, project97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(qualificationDTO74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(qualificationArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        java.lang.Class<?> wildcardClass51 = workerDTO50.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (byte) 1);
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet55, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(workerSet59);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0:0:2:100:0:2:10");
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification3.toDTO();
        java.lang.String str14 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker16 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification3.addWorker(worker16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        boolean boolean24 = company8.equals((java.lang.Object) boolean23);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        boolean boolean38 = qualification29.equals((java.lang.Object) qualificationDTO37);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company45.getUnavailableWorkers();
        java.lang.String str47 = company45.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company45.getProjects();
        edu.colostate.cs415.model.Qualification qualification50 = company45.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray51 = new edu.colostate.cs415.model.Qualification[] { qualification29, qualification43, qualification50 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet52 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet52, qualificationArray51);
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet52, (double) (byte) 100);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean62 = qualification59.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification66.toDTO();
        boolean boolean68 = qualification59.equals((java.lang.Object) qualificationDTO67);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification59.toDTO();
        worker55.addQualification(qualification59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = worker55.getQualifications();
        java.lang.String str72 = worker55.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker55.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO74 = worker55.toDTO();
        company8.unassignAll(worker55);
        boolean boolean76 = worker55.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet77 = worker55.getProjects();
        edu.colostate.cs415.model.Project project78 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker55, project78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualificationDTO39);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0:0:2:100" + "'", str72, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNotNull(workerDTO74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(projectSet77);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        int int69 = worker48.getWorkload();
        double double70 = worker48.getSalary();
        edu.colostate.cs415.model.Project project71 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = worker48.willOverload(project71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 100.0d + "'", double70 == 100.0d);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        java.lang.String str48 = worker31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker31.getQualifications();
        java.lang.String str50 = worker31.toString();
        boolean boolean51 = worker31.isAvailable();
        boolean boolean52 = worker31.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker31.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet53, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker55.getQualifications();
        double double57 = worker55.getSalary();
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0:0:2:100" + "'", str48, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0:0:2:100" + "'", str50, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker35.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("", qualificationSet37, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        boolean boolean46 = worker30.isAvailable();
        worker30.setSalary((double) (byte) 100);
        java.lang.Class<?> wildcardClass49 = worker30.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project42 = company1.createProject("hi!", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, projectSize41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.lang.String str37 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet39, (double) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Project project88 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        int int40 = worker39.getWorkload();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        worker39.addQualification(qualification44);
        qualification7.addWorker(worker39);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean56 = qualification53.equals((java.lang.Object) 10.0f);
        boolean boolean57 = company48.equals((java.lang.Object) boolean56);
        java.lang.String str58 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company48.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company48.getQualifications();
        boolean boolean61 = worker39.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company48.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("", qualificationSet62, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0f);
        boolean boolean42 = company33.equals((java.lang.Object) boolean41);
        java.lang.String str43 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company33.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company33.getQualifications();
        boolean boolean46 = worker31.equals((java.lang.Object) qualificationSet45);
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project48 = new edu.colostate.cs415.model.Project("", qualificationSet45, projectSize47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.lang.String str22 = qualification20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification35.removeWorker(worker37);
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification20, qualification26, qualification31, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = worker43.getQualifications();
        boolean boolean45 = worker43.isAvailable();
        boolean boolean46 = company1.equals((java.lang.Object) worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet47);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.lang.String str38 = company1.getName();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        edu.colostate.cs415.model.Project project70 = null;
        worker69.removeProject(project70);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = qualification75.getWorkers();
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company78.getUnassignedWorkers();
        boolean boolean82 = qualification75.equals((java.lang.Object) workerSet81);
        worker69.addQualification(qualification75);
        java.lang.String str84 = worker69.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO85 = worker69.toDTO();
        edu.colostate.cs415.model.Project project86 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker69, project86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0" + "'", str84, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerDTO85);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company1.getEmployedWorkers();
        java.lang.String str62 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        qualification6.removeWorker(worker46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification6.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification6.getWorkers();
        java.lang.String str69 = qualification6.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO70 = qualification6.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = qualification6.getWorkers();
        java.lang.String str72 = qualification6.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0" + "'", str72, "hi!:0:0");
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) worker36);
        double double54 = worker36.getSalary();
        edu.colostate.cs415.model.Project project55 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker36.addProject(project55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company1.getProjects();
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(projectSet61);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!:0:0");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        int int46 = worker45.getWorkload();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        worker45.addQualification(qualification50);
        qualification13.addWorker(worker45);
        boolean boolean53 = qualification6.equals((java.lang.Object) worker45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = worker45.getProjects();
        boolean boolean56 = worker45.equals((java.lang.Object) 1L);
        java.lang.Class<?> wildcardClass57 = worker45.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize6 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project7 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100", qualificationSet5, projectSize6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 0.0f);
        double double45 = worker44.getSalary();
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker44, project46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:2:10");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        java.lang.String str65 = worker46.toString();
        boolean boolean66 = worker46.isAvailable();
        boolean boolean67 = worker46.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker46.getQualifications();
        edu.colostate.cs415.model.Worker worker70 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet68, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = worker70.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize72 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project73 = company1.createProject("hi!:0:0", qualificationSet71, projectSize72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertNotNull(qualificationSet71);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        java.lang.String str88 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project91 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!:0:0" + "'", str88, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(workerSet90);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project90 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification89);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        boolean boolean50 = worker30.isAvailable();
        boolean boolean51 = worker30.isAvailable();
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        java.lang.String str19 = qualification17.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification32.removeWorker(worker34);
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification17, qualification23, qualification28, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) 10);
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker40, project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean48 = qualification45.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification52.toDTO();
        boolean boolean54 = qualification45.equals((java.lang.Object) qualificationDTO53);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification45.toDTO();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getUnavailableWorkers();
        java.lang.String str63 = company61.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = company61.getProjects();
        edu.colostate.cs415.model.Qualification qualification66 = company61.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray67 = new edu.colostate.cs415.model.Qualification[] { qualification45, qualification59, qualification66 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet68 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet68, qualificationArray67);
        edu.colostate.cs415.model.Worker worker71 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker73 = company39.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company39.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet75 = company39.getProjects();
        boolean boolean76 = company1.equals((java.lang.Object) projectSet75);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0" + "'", str63, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet64);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(worker73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(projectSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(workerSet77);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        double double55 = worker36.getSalary();
        java.lang.String str56 = worker36.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker36.getQualifications();
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = worker36.willOverload(project58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0:0:2:100" + "'", str56, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet57);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean39 = qualification36.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        boolean boolean45 = qualification36.equals((java.lang.Object) qualificationDTO44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification36.toDTO();
        worker32.addQualification(qualification36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet48, (double) 1);
        edu.colostate.cs415.model.ProjectSize projectSize51 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project52 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet48, projectSize51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualificationSet48);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.lang.String str38 = company1.getName();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification40 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        java.lang.String str56 = worker39.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker39.getQualifications();
        qualification7.removeWorker(worker39);
        boolean boolean59 = worker39.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker39.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize61 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project62 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet60, projectSize61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0:0:2:100" + "'", str56, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualificationSet60);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Project project39 = null;
        worker38.removeProject(project39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) workerSet50);
        worker38.addQualification(qualification44);
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker38, project53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        boolean boolean22 = company6.equals((java.lang.Object) boolean21);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean30 = qualification27.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification34.toDTO();
        boolean boolean36 = qualification27.equals((java.lang.Object) qualificationDTO35);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.lang.String str45 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company43.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company43.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray49 = new edu.colostate.cs415.model.Qualification[] { qualification27, qualification41, qualification48 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet50 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet50, qualificationArray49);
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet50, (double) (byte) 100);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean60 = qualification57.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification64.toDTO();
        boolean boolean66 = qualification57.equals((java.lang.Object) qualificationDTO65);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification57.toDTO();
        worker53.addQualification(qualification57);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = worker53.getQualifications();
        java.lang.String str70 = worker53.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = worker53.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO72 = worker53.toDTO();
        company6.unassignAll(worker53);
        boolean boolean74 = worker53.isAvailable();
        edu.colostate.cs415.model.Project project75 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker53, project75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationDTO65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!:0:0:0:2:100" + "'", str70, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertNotNull(workerDTO72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification39 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 0.0f);
        worker44.setSalary((double) (short) 1);
        int int47 = worker44.getWorkload();
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker44, project48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project4 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet6, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean39 = qualification36.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        boolean boolean45 = qualification36.equals((java.lang.Object) qualificationDTO44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification36.toDTO();
        worker32.addQualification(qualification36);
        boolean boolean48 = worker32.isAvailable();
        worker32.setSalary((double) (byte) 100);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = worker32.getProjects();
        boolean boolean52 = qualification1.equals((java.lang.Object) projectSet51);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification1.getWorkers();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet53);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        int int70 = worker69.getWorkload();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str73 = company72.getName();
        boolean boolean74 = worker69.equals((java.lang.Object) str73);
        java.lang.String str75 = worker69.toString();
        java.lang.String str76 = worker69.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = worker69.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0:0:0", qualificationSet77, projectSize78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!:0:0:0:2:100" + "'", str75, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!:0:0:0:2:100" + "'", str76, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet77);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        qualification6.addWorker(worker38);
        java.lang.String str57 = worker38.getName();
        company1.unassignAll(worker38);
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.lang.String str17 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification31.toDTO();
        boolean boolean33 = qualification24.equals((java.lang.Object) qualificationDTO32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.lang.String str42 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company40.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray46 = new edu.colostate.cs415.model.Qualification[] { qualification24, qualification38, qualification45 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet47 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet47, qualificationArray46);
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet47, (double) (byte) 100);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean57 = qualification54.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification61.toDTO();
        boolean boolean63 = qualification54.equals((java.lang.Object) qualificationDTO62);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification54.toDTO();
        worker50.addQualification(qualification54);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker50.getQualifications();
        edu.colostate.cs415.model.Worker worker68 = company12.createWorker("hi!:0:0:0:2:10", qualificationSet66, (double) 100.0f);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company70.getUnavailableWorkers();
        java.lang.String str72 = company70.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet73 = company70.getProjects();
        edu.colostate.cs415.model.Qualification qualification75 = company70.createQualification("hi!:0:0");
        java.lang.String str76 = qualification75.toString();
        worker68.addQualification(qualification75);
        edu.colostate.cs415.model.Project project78 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker68, project78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(worker68);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0" + "'", str72, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet73);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!:0:0" + "'", str76, "hi!:0:0");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = worker30.getQualifications();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        java.lang.String str40 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company35.getEmployedWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.lang.String str65 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company63.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company63.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification47, qualification61, qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) (byte) 100);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification77.getWorkers();
        boolean boolean80 = qualification77.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification84.toDTO();
        boolean boolean86 = qualification77.equals((java.lang.Object) qualificationDTO85);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification77.toDTO();
        worker73.addQualification(qualification77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker73.getQualifications();
        edu.colostate.cs415.model.Worker worker91 = company35.createWorker("hi!:0:0:0:2:10", qualificationSet89, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet89, (double) (short) 10);
        boolean boolean94 = worker30.equals((java.lang.Object) "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertNotNull(worker91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        boolean boolean7 = company1.equals((java.lang.Object) true);
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project38 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:10", qualificationSet36, projectSize37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO36 = worker35.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project39 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100:0:2:10", qualificationSet37, projectSize38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(workerDTO36);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        boolean boolean24 = company8.equals((java.lang.Object) boolean23);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean32 = qualification29.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        boolean boolean38 = qualification29.equals((java.lang.Object) qualificationDTO37);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company45.getUnavailableWorkers();
        java.lang.String str47 = company45.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company45.getProjects();
        edu.colostate.cs415.model.Qualification qualification50 = company45.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray51 = new edu.colostate.cs415.model.Qualification[] { qualification29, qualification43, qualification50 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet52 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet52, qualificationArray51);
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet52, (double) (byte) 100);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean62 = qualification59.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification66.toDTO();
        boolean boolean68 = qualification59.equals((java.lang.Object) qualificationDTO67);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification59.toDTO();
        worker55.addQualification(qualification59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = worker55.getQualifications();
        java.lang.String str72 = worker55.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker55.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO74 = worker55.toDTO();
        company8.unassignAll(worker55);
        int int76 = worker55.getWorkload();
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification80.getWorkers();
        boolean boolean83 = qualification80.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company85 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification87 = company85.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification87.toDTO();
        boolean boolean89 = qualification80.equals((java.lang.Object) qualificationDTO88);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO90 = qualification80.toDTO();
        boolean boolean91 = worker55.equals((java.lang.Object) qualificationDTO90);
        edu.colostate.cs415.model.Project project92 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker55, project92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualificationDTO39);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0:0:2:100" + "'", str72, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertNotNull(workerDTO74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualification87);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(qualificationDTO90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        boolean boolean7 = company1.equals((java.lang.Object) true);
        java.lang.Class<?> wildcardClass8 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        edu.colostate.cs415.dto.WorkerDTO workerDTO38 = worker35.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO39 = worker35.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(workerDTO38);
        org.junit.Assert.assertNotNull(workerDTO39);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0.0f);
        worker38.setSalary((double) (short) 1);
        int int41 = worker38.getWorkload();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        company1.unassignAll(worker41);
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification3.toDTO();
        java.lang.String str14 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO65 = worker46.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO66 = worker46.toDTO();
        qualification3.removeWorker(worker46);
        java.lang.Class<?> wildcardClass68 = worker46.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(workerDTO65);
        org.junit.Assert.assertNotNull(workerDTO66);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet55, (double) 100.0f);
        java.lang.String str58 = company1.toString();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:1:0" + "'", str58, "hi!:1:0");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company1.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification68 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationSet66);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0f);
        boolean boolean42 = company33.equals((java.lang.Object) boolean41);
        java.lang.String str43 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company33.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company33.getQualifications();
        boolean boolean46 = worker31.equals((java.lang.Object) qualificationSet45);
        edu.colostate.cs415.model.ProjectSize projectSize47 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project48 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100:0:2:10", qualificationSet45, projectSize47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        qualification6.addWorker(worker38);
        java.lang.String str57 = worker38.getName();
        company1.unassignAll(worker38);
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        worker38.setSalary((double) '#');
        edu.colostate.cs415.model.Project project60 = null;
        worker38.removeProject(project60);
        worker38.setSalary((double) 10L);
        edu.colostate.cs415.model.Project project64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = worker38.willOverload(project64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        company1.unassignAll(worker41);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project45 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(workerSet44);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification40.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean56 = qualification47.equals((java.lang.Object) qualificationDTO55);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company63.getUnavailableWorkers();
        java.lang.String str65 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company63.getProjects();
        edu.colostate.cs415.model.Qualification qualification68 = company63.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification47, qualification61, qualification68 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) (byte) 100);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification77.getWorkers();
        boolean boolean80 = qualification77.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification84.toDTO();
        boolean boolean86 = qualification77.equals((java.lang.Object) qualificationDTO85);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification77.toDTO();
        worker73.addQualification(qualification77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker73.getQualifications();
        java.lang.String str90 = worker73.toString();
        qualification40.removeWorker(worker73);
        java.lang.String str92 = worker73.toString();
        company1.unassignAll(worker73);
        edu.colostate.cs415.model.Project project94 = null;
        worker73.removeProject(project94);
        double double96 = worker73.getSalary();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!:0:0:0:2:100" + "'", str90, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:0:0:2:100" + "'", str92, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!:0:0");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        int int46 = worker45.getWorkload();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        worker45.addQualification(qualification50);
        qualification13.addWorker(worker45);
        boolean boolean53 = qualification6.equals((java.lang.Object) worker45);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean66 = qualification63.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification70.toDTO();
        boolean boolean72 = qualification63.equals((java.lang.Object) qualificationDTO71);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO73 = qualification63.toDTO();
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company79.getUnavailableWorkers();
        java.lang.String str81 = company79.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet82 = company79.getProjects();
        edu.colostate.cs415.model.Qualification qualification84 = company79.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray85 = new edu.colostate.cs415.model.Qualification[] { qualification63, qualification77, qualification84 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet86 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet86, qualificationArray85);
        edu.colostate.cs415.model.Worker worker89 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet86, (double) (byte) 100);
        int int90 = worker89.getWorkload();
        qualification57.removeWorker(worker89);
        qualification6.removeWorker(worker89);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO93 = qualification6.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationDTO73);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!:0:0" + "'", str81, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet82);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(qualificationDTO93);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Qualification qualification7 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        java.lang.String str57 = worker38.toString();
        boolean boolean58 = worker38.isAvailable();
        boolean boolean59 = worker38.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker38.getQualifications();
        qualification7.addWorker(worker38);
        qualification3.removeWorker(worker38);
        java.lang.Class<?> wildcardClass63 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet57);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!:0:0");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        int int46 = worker45.getWorkload();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        worker45.addQualification(qualification50);
        qualification13.addWorker(worker45);
        boolean boolean53 = qualification6.equals((java.lang.Object) worker45);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = worker45.getProjects();
        boolean boolean56 = worker45.equals((java.lang.Object) 1L);
        java.lang.String str57 = worker45.toString();
        java.lang.String str58 = worker45.getName();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker45.addProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnassignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification39 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        java.lang.Class<?> wildcardClass2 = qualification1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.lang.String str54 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company52.getProjects();
        edu.colostate.cs415.model.Qualification qualification57 = company52.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = worker30.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Project project60 = null;
        worker30.removeProject(project60);
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet55);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        boolean boolean58 = qualification49.equals((java.lang.Object) qualificationDTO57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification49.toDTO();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getUnavailableWorkers();
        java.lang.String str67 = company65.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet68 = company65.getProjects();
        edu.colostate.cs415.model.Qualification qualification70 = company65.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray71 = new edu.colostate.cs415.model.Qualification[] { qualification49, qualification63, qualification70 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet72 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet72, qualificationArray71);
        edu.colostate.cs415.model.Worker worker75 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet72, (double) (byte) 100);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification79.getWorkers();
        boolean boolean82 = qualification79.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company84 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification86 = company84.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification86.toDTO();
        boolean boolean88 = qualification79.equals((java.lang.Object) qualificationDTO87);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification79.toDTO();
        worker75.addQualification(qualification79);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = worker75.getQualifications();
        java.lang.String str92 = worker75.toString();
        qualification42.removeWorker(worker75);
        java.lang.String str94 = worker75.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet95 = worker75.getProjects();
        company1.unassignAll(worker75);
        edu.colostate.cs415.model.Project project97 = null;
        worker75.removeProject(project97);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!:0:0" + "'", str67, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet68);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(qualification86);
        org.junit.Assert.assertNotNull(qualificationDTO87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(qualificationDTO89);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!:0:0:0:2:100" + "'", str92, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!:0:0:0:2:100" + "'", str94, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(projectSet95);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet6, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        qualification6.addWorker(worker38);
        java.lang.String str57 = worker38.getName();
        company1.unassignAll(worker38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet59);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) worker36);
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker36.addProject(project54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker36.toDTO();
        boolean boolean57 = worker36.isAvailable();
        edu.colostate.cs415.dto.WorkerDTO workerDTO58 = worker36.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(workerDTO58);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker43 = company9.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 100);
        java.lang.String str44 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.lang.String str51 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company49.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company49.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        java.lang.String str60 = qualification58.toString();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        edu.colostate.cs415.model.Worker worker75 = null;
        qualification73.removeWorker(worker75);
        edu.colostate.cs415.model.Qualification[] qualificationArray77 = new edu.colostate.cs415.model.Qualification[] { qualification54, qualification58, qualification64, qualification69, qualification73 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet78 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet78, qualificationArray77);
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet78, (double) 10);
        java.lang.String str82 = worker81.toString();
        company9.unassignAll(worker81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize85 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project86 = company1.createProject("", qualificationSet84, projectSize85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(worker43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualificationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!:0:0:0:2:10" + "'", str82, "hi!:0:0:0:2:10");
        org.junit.Assert.assertNotNull(qualificationSet84);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker40 = company2.createWorker("hi!:0:0:0:2:100", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) 0);
        edu.colostate.cs415.model.ProjectSize projectSize41 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project42 = new edu.colostate.cs415.model.Project("hi!:1:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, projectSize41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(worker40);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company1.getQualifications();
        edu.colostate.cs415.model.Worker worker67 = null;
        edu.colostate.cs415.model.Project project68 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker67, project68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationSet66);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        worker38.setSalary((double) '#');
        boolean boolean60 = worker38.isAvailable();
        java.lang.String str61 = worker38.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0:0:2:35" + "'", str61, "hi!:0:0:0:2:35");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.lang.String str60 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company58.getProjects();
        edu.colostate.cs415.model.Qualification qualification63 = company58.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray64 = new edu.colostate.cs415.model.Qualification[] { qualification42, qualification56, qualification63 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet65 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet65, qualificationArray64);
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet65, (double) (byte) 100);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        boolean boolean75 = qualification72.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO80 = qualification79.toDTO();
        boolean boolean81 = qualification72.equals((java.lang.Object) qualificationDTO80);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO82 = qualification72.toDTO();
        worker68.addQualification(qualification72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = worker68.getQualifications();
        java.lang.String str85 = worker68.toString();
        qualification3.addWorker(worker68);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = qualification3.getWorkers();
        java.lang.String str88 = qualification3.toString();
        java.lang.Class<?> wildcardClass89 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0" + "'", str60, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(qualificationDTO80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualificationDTO82);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:0:0:0:2:100" + "'", str85, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.lang.String str12 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company17.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project23 = company7.createProject("hi!:0:0:0:2:100", qualificationSet21, projectSize22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        java.lang.String str7 = company4.getName();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getAvailableWorkers();
        boolean boolean10 = company1.equals((java.lang.Object) workerSet9);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker47 = company13.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project53 = company1.createProject("hi!:0:0:0:0", qualificationSet51, projectSize52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(worker47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualificationSet51);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        boolean boolean38 = company1.equals((java.lang.Object) (-1.0d));
        edu.colostate.cs415.model.Qualification qualification40 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company1.getProjects();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(projectSet41);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        double double46 = worker38.getSalary();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification3.toDTO();
        java.lang.String str57 = qualification3.toString();
        java.lang.String str58 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean44 = qualification35.equals((java.lang.Object) qualificationDTO43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification35.toDTO();
        worker31.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = worker31.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet47, (double) 1);
        edu.colostate.cs415.model.Project project50 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker49.addProject(project50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        java.lang.String str43 = qualification41.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        boolean boolean90 = qualification41.equals((java.lang.Object) qualification78);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO91 = qualification78.toDTO();
        boolean boolean92 = company1.equals((java.lang.Object) qualificationDTO91);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification95 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(qualificationDTO91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(workerSet93);
        org.junit.Assert.assertNotNull(qualification95);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        edu.colostate.cs415.model.Worker worker5 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification3.addWorker(worker5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:1:0");
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.lang.String str37 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company2.getQualifications();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean48 = qualification45.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification52.toDTO();
        boolean boolean54 = qualification45.equals((java.lang.Object) qualificationDTO53);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification45.toDTO();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getUnavailableWorkers();
        java.lang.String str63 = company61.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = company61.getProjects();
        edu.colostate.cs415.model.Qualification qualification66 = company61.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray67 = new edu.colostate.cs415.model.Qualification[] { qualification45, qualification59, qualification66 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet68 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet68, qualificationArray67);
        edu.colostate.cs415.model.Worker worker71 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet68, (double) (byte) 100);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = qualification75.getWorkers();
        boolean boolean78 = qualification75.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification82 = company80.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO83 = qualification82.toDTO();
        boolean boolean84 = qualification75.equals((java.lang.Object) qualificationDTO83);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO85 = qualification75.toDTO();
        worker71.addQualification(qualification75);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker71.getQualifications();
        java.lang.String str88 = worker71.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = worker71.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO90 = worker71.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO91 = worker71.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet92 = worker71.getQualifications();
        edu.colostate.cs415.model.Worker worker94 = company2.createWorker("hi!:0:0", qualificationSet92, 10.0d);
        edu.colostate.cs415.model.ProjectSize projectSize95 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project96 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100:0:2:10", qualificationSet92, projectSize95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0" + "'", str63, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet64);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(qualificationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(qualificationDTO83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(qualificationDTO85);
        org.junit.Assert.assertNotNull(qualificationSet87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!:0:0:0:2:100" + "'", str88, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet89);
        org.junit.Assert.assertNotNull(workerDTO90);
        org.junit.Assert.assertNotNull(workerDTO91);
        org.junit.Assert.assertNotNull(qualificationSet92);
        org.junit.Assert.assertNull(worker94);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        boolean boolean56 = company47.equals((java.lang.Object) boolean55);
        java.lang.String str57 = company47.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company47.getQualifications();
        boolean boolean60 = worker45.equals((java.lang.Object) qualificationSet59);
        edu.colostate.cs415.model.Worker worker62 = company6.createWorker("hi!", qualificationSet59, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker64 = company2.createWorker("hi!:0:0", qualificationSet59, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker66 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet59, (double) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(worker62);
        org.junit.Assert.assertNull(worker64);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company41.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        java.lang.String str52 = qualification50.toString();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        edu.colostate.cs415.model.Worker worker67 = null;
        qualification65.removeWorker(worker67);
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification46, qualification50, qualification56, qualification61, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = worker73.getQualifications();
        edu.colostate.cs415.model.Worker worker76 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet74, (double) 0.0f);
        edu.colostate.cs415.model.ProjectSize projectSize77 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project78 = company1.createProject("hi!:0:0:0:2:100", qualificationSet74, projectSize77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualificationSet74);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) 1.0f);
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project43 = company1.createProject("hi!:0:0:0:2:100", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, projectSize42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Project project33 = null;
        worker32.removeProject(project33);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker32.getProjects();
        boolean boolean36 = company1.equals((java.lang.Object) worker32);
        worker32.setSalary((double) 100.0f);
        java.lang.Class<?> wildcardClass39 = worker32.getClass();
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        int int40 = worker39.getWorkload();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        worker39.addQualification(qualification44);
        qualification7.addWorker(worker39);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean56 = qualification53.equals((java.lang.Object) 10.0f);
        boolean boolean57 = company48.equals((java.lang.Object) boolean56);
        java.lang.String str58 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company48.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company48.getQualifications();
        boolean boolean61 = worker39.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company48.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project64 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet62, projectSize63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) workerSet42);
        worker30.addQualification(qualification36);
        java.lang.String str45 = worker30.getName();
        double double46 = worker30.getSalary();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:10");
        boolean boolean49 = worker30.equals((java.lang.Object) company48);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean58 = qualification55.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification62.toDTO();
        boolean boolean64 = qualification55.equals((java.lang.Object) qualificationDTO63);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification55.toDTO();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getUnavailableWorkers();
        java.lang.String str73 = company71.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet74 = company71.getProjects();
        edu.colostate.cs415.model.Qualification qualification76 = company71.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray77 = new edu.colostate.cs415.model.Qualification[] { qualification55, qualification69, qualification76 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet78 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet78, qualificationArray77);
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet78, (double) (byte) 100);
        int int82 = worker81.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker81.getQualifications();
        edu.colostate.cs415.model.Worker worker85 = company48.createWorker("hi!:0:0", qualificationSet83, (double) (-1));
        edu.colostate.cs415.model.Project project86 = null;
        // The following exception was thrown during execution in test generation
        try {
            company48.start(project86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationDTO65);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!:0:0" + "'", str73, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet74);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(qualificationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertNull(worker85);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:2:100:0:0" + "'", str7, "hi!:0:0:0:2:100:0:0");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        boolean boolean69 = worker48.isAvailable();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean76 = qualification73.equals((java.lang.Object) 10.0f);
        worker48.addQualification(qualification73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification73.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(workerSet78);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO35 = worker34.toDTO();
        edu.colostate.cs415.model.Project project36 = null;
        worker34.removeProject(project36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.lang.String str41 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company39.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company39.getProjects();
        java.lang.String str45 = company39.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company39.getAvailableWorkers();
        boolean boolean47 = worker34.equals((java.lang.Object) company39);
        double double48 = worker34.getSalary();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(workerDTO35);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 10.0d + "'", double48 == 10.0d);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project14 = company1.createProject("hi!", qualificationSet12, projectSize13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        java.lang.String str39 = company1.getName();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker38.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerDTO46);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker40 = company6.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) 100);
        java.lang.String str41 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company6.getProjects();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company44.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company44.getQualifications();
        boolean boolean49 = company6.equals((java.lang.Object) qualificationSet48);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker51 = company1.createWorker("", qualificationSet48, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(worker40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = worker38.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(projectSet46);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) workerSet42);
        worker30.addQualification(qualification36);
        java.lang.String str45 = worker30.getName();
        double double46 = worker30.getSalary();
        double double47 = worker30.getSalary();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 100.0d + "'", double47 == 100.0d);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        java.lang.String str54 = worker35.getName();
        edu.colostate.cs415.model.Project project55 = null;
        worker35.removeProject(project55);
        java.lang.String str57 = worker35.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet36, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean39 = qualification36.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        boolean boolean45 = qualification36.equals((java.lang.Object) qualificationDTO44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification36.toDTO();
        worker32.addQualification(qualification36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker32.getQualifications();
        java.lang.String str49 = worker32.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker32.getQualifications();
        java.lang.String str51 = worker32.toString();
        boolean boolean52 = worker32.isAvailable();
        boolean boolean53 = worker32.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet54, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project59 = new edu.colostate.cs415.model.Project("", qualificationSet57, projectSize58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0:0:2:100" + "'", str51, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(qualificationSet57);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project40 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        int int70 = worker69.getWorkload();
        qualification3.removeWorker(worker69);
        java.lang.Class<?> wildcardClass72 = worker69.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        int int40 = worker39.getWorkload();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        worker39.addQualification(qualification44);
        qualification7.addWorker(worker39);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean56 = qualification53.equals((java.lang.Object) 10.0f);
        boolean boolean57 = company48.equals((java.lang.Object) boolean56);
        java.lang.String str58 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company48.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company48.getQualifications();
        boolean boolean61 = worker39.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company48.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize63 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project64 = new edu.colostate.cs415.model.Project("hi!:1:0", qualificationSet62, projectSize63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Worker worker6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100:0:0");
        edu.colostate.cs415.model.Project project2 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company6.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification19 = company14.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean28 = qualification25.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification32.toDTO();
        boolean boolean34 = qualification25.equals((java.lang.Object) qualificationDTO33);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company41.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray47 = new edu.colostate.cs415.model.Qualification[] { qualification25, qualification39, qualification46 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet48 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet48, qualificationArray47);
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet48, (double) (byte) 100);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean58 = qualification55.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification62.toDTO();
        boolean boolean64 = qualification55.equals((java.lang.Object) qualificationDTO63);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification55.toDTO();
        worker51.addQualification(qualification55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = worker51.getQualifications();
        java.lang.String str68 = worker51.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = worker51.getQualifications();
        qualification19.removeWorker(worker51);
        qualification11.removeWorker(worker51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO72 = qualification11.toDTO();
        boolean boolean73 = company1.equals((java.lang.Object) qualificationDTO72);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification75 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationDTO65);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0:0:2:100" + "'", str68, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNotNull(qualificationDTO72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getUnavailableWorkers();
        java.lang.String str6 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company4.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company4.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        java.lang.String str15 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification28.removeWorker(worker30);
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification13, qualification19, qualification24, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker36.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 0.0f);
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project41 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:35", qualificationSet37, projectSize40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        qualification6.removeWorker(worker46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification6.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification6.getWorkers();
        java.lang.String str69 = qualification6.toString();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet73 = company71.getProjects();
        boolean boolean74 = qualification6.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company71.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(projectSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(workerSet75);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        int int51 = worker30.getWorkload();
        edu.colostate.cs415.dto.WorkerDTO workerDTO52 = worker30.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(workerDTO52);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        qualification6.removeWorker(worker46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification6.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification6.toDTO();
        java.lang.Class<?> wildcardClass69 = qualificationDTO68.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(qualificationDTO68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        edu.colostate.cs415.model.Worker worker11 = null;
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker11, project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean39 = qualification36.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        boolean boolean45 = qualification36.equals((java.lang.Object) qualificationDTO44);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO46 = qualification36.toDTO();
        worker32.addQualification(qualification36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker32.getQualifications();
        java.lang.String str49 = worker32.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker32.getQualifications();
        java.lang.String str51 = worker32.toString();
        boolean boolean52 = worker32.isAvailable();
        boolean boolean53 = worker32.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet54, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker56.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker59 = new edu.colostate.cs415.model.Worker("", qualificationSet57, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationDTO46);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0:0:2:100" + "'", str51, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(qualificationSet57);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        worker38.setSalary((double) '#');
        edu.colostate.cs415.model.Project project60 = null;
        worker38.removeProject(project60);
        worker38.setSalary((double) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = worker38.getProjects();
        edu.colostate.cs415.model.Project project65 = null;
        worker38.removeProject(project65);
        edu.colostate.cs415.model.Project project67 = null;
        worker38.removeProject(project67);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(projectSet64);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.lang.String str12 = company10.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification23.toDTO();
        boolean boolean25 = qualification16.equals((java.lang.Object) qualificationDTO24);
        boolean boolean26 = company10.equals((java.lang.Object) boolean25);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean34 = qualification31.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification38.toDTO();
        boolean boolean40 = qualification31.equals((java.lang.Object) qualificationDTO39);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification31.toDTO();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        java.lang.String str49 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company47.getProjects();
        edu.colostate.cs415.model.Qualification qualification52 = company47.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray53 = new edu.colostate.cs415.model.Qualification[] { qualification31, qualification45, qualification52 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet54 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet54, qualificationArray53);
        edu.colostate.cs415.model.Worker worker57 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet54, (double) (byte) 100);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        boolean boolean64 = qualification61.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification68.toDTO();
        boolean boolean70 = qualification61.equals((java.lang.Object) qualificationDTO69);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification61.toDTO();
        worker57.addQualification(qualification61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = worker57.getQualifications();
        java.lang.String str74 = worker57.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = worker57.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO76 = worker57.toDTO();
        company10.unassignAll(worker57);
        int int78 = worker57.getWorkload();
        edu.colostate.cs415.model.Project project79 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker57, project79);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationDTO39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualificationDTO41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0" + "'", str49, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!:0:0:0:2:100" + "'", str74, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertNotNull(workerDTO76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Project project32 = null;
        worker30.removeProject(project32);
        edu.colostate.cs415.model.Project project34 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0.0f);
        worker38.setSalary((double) (short) 1);
        int int41 = worker38.getWorkload();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean43 = worker38.willOverload(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        boolean boolean91 = qualification41.equals((java.lang.Object) worker74);
        boolean boolean92 = company1.equals((java.lang.Object) boolean91);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project95 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(workerSet93);
        org.junit.Assert.assertNotNull(workerSet94);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker42 = company8.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) 100);
        java.lang.String str43 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company8.getAvailableWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company46.getProjects();
        java.lang.String str49 = company46.getName();
        java.lang.String str50 = company46.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company46.getAvailableWorkers();
        boolean boolean52 = company8.equals((java.lang.Object) company46);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company46.getAvailableWorkers();
        boolean boolean54 = qualification6.equals((java.lang.Object) company46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification6.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(worker42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!:0:0" + "'", str50, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationDTO55);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        worker30.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification35.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification35.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification35.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationDTO39);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.lang.String str22 = qualification20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification35.removeWorker(worker37);
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification20, qualification26, qualification31, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = worker43.getQualifications();
        boolean boolean45 = worker43.isAvailable();
        boolean boolean46 = company1.equals((java.lang.Object) worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass48 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker38.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        java.lang.String str53 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company48.getUnavailableWorkers();
        boolean boolean55 = worker38.equals((java.lang.Object) workerSet54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker38.toDTO();
        java.lang.String str57 = worker38.toString();
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        boolean boolean38 = company1.equals((java.lang.Object) (-1.0d));
        edu.colostate.cs415.model.Qualification qualification40 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(workerSet42);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        int int51 = worker30.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = worker30.getProjects();
        double double53 = worker30.getSalary();
        double double54 = worker30.getSalary();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str34 = company33.getName();
        boolean boolean35 = worker30.equals((java.lang.Object) str34);
        java.lang.String str36 = worker30.toString();
        java.lang.String str37 = worker30.toString();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.model.Worker worker43 = null;
        qualification41.removeWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification41.getWorkers();
        worker30.addQualification(qualification41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification41.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification41.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification41.getWorkers();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0:0:2:100" + "'", str36, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0:0:2:100" + "'", str37, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str34 = company33.getName();
        boolean boolean35 = worker30.equals((java.lang.Object) str34);
        java.lang.String str36 = worker30.toString();
        java.lang.String str37 = worker30.toString();
        edu.colostate.cs415.model.Qualification qualification39 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getUnavailableWorkers();
        java.lang.String str62 = company60.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company60.getProjects();
        edu.colostate.cs415.model.Qualification qualification65 = company60.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray66 = new edu.colostate.cs415.model.Qualification[] { qualification44, qualification58, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet67 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet67, qualificationArray66);
        edu.colostate.cs415.model.Worker worker70 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet67, (double) (byte) 100);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean77 = qualification74.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO82 = qualification81.toDTO();
        boolean boolean83 = qualification74.equals((java.lang.Object) qualificationDTO82);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO84 = qualification74.toDTO();
        worker70.addQualification(qualification74);
        boolean boolean86 = worker70.isAvailable();
        worker70.setSalary((double) (byte) 100);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet89 = worker70.getProjects();
        boolean boolean90 = qualification39.equals((java.lang.Object) projectSet89);
        java.lang.String str91 = qualification39.toString();
        worker30.addQualification(qualification39);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO93 = qualification39.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0:0:2:100" + "'", str36, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0:0:2:100" + "'", str37, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertNotNull(qualificationDTO82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualificationDTO84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(projectSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0" + "'", str91, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO93);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        java.lang.String str54 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company52.getProjects();
        edu.colostate.cs415.model.Qualification qualification57 = company52.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = worker30.equals((java.lang.Object) qualification57);
        java.lang.String str60 = worker30.toString();
        edu.colostate.cs415.model.Project project61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = worker30.willOverload(project61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet55);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0:0:2:100" + "'", str60, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        boolean boolean12 = company1.equals((java.lang.Object) 12);
        java.lang.String str13 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        int int33 = worker32.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet34, (double) '#');
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project38 = new edu.colostate.cs415.model.Project("hi!", qualificationSet34, projectSize37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        boolean boolean58 = worker38.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = worker38.getQualifications();
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(qualificationSet59);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker35.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO54 = worker35.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker35.toDTO();
        boolean boolean56 = company1.equals((java.lang.Object) worker35);
        java.lang.String str57 = company1.toString();
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(workerDTO54);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        boolean boolean58 = qualification49.equals((java.lang.Object) qualificationDTO57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification49.toDTO();
        worker45.addQualification(qualification49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker45.getQualifications();
        java.lang.String str62 = worker45.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker45.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO64 = worker45.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO65 = worker45.toDTO();
        boolean boolean66 = company11.equals((java.lang.Object) worker45);
        edu.colostate.cs415.model.Project project67 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker45, project67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0:0:2:100" + "'", str62, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertNotNull(workerDTO64);
        org.junit.Assert.assertNotNull(workerDTO65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        java.lang.String str39 = company1.toString();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        boolean boolean11 = company2.equals((java.lang.Object) boolean10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        boolean boolean65 = qualification15.equals((java.lang.Object) worker48);
        company2.unassignAll(worker48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize68 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project69 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:10", qualificationSet67, projectSize68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationSet67);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        boolean boolean91 = qualification41.equals((java.lang.Object) worker74);
        boolean boolean92 = company1.equals((java.lang.Object) boolean91);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet95 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(workerSet93);
        org.junit.Assert.assertNotNull(workerSet94);
        org.junit.Assert.assertNotNull(workerSet95);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker38.getQualifications();
        java.lang.String str59 = worker38.toString();
        java.lang.String str60 = worker38.toString();
        edu.colostate.cs415.model.Project project61 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:2:100" + "'", str59, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0:0:2:100" + "'", str60, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:2:10");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean27 = qualification24.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification31.toDTO();
        boolean boolean33 = qualification24.equals((java.lang.Object) qualificationDTO32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.lang.String str42 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company40.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray46 = new edu.colostate.cs415.model.Qualification[] { qualification24, qualification38, qualification45 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet47 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet47, qualificationArray46);
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet47, (double) (byte) 100);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean57 = qualification54.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification61.toDTO();
        boolean boolean63 = qualification54.equals((java.lang.Object) qualificationDTO62);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification54.toDTO();
        worker50.addQualification(qualification54);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker50.getQualifications();
        boolean boolean67 = qualification17.equals((java.lang.Object) worker50);
        company1.unassignAll(worker50);
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean48 = qualification45.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification52.toDTO();
        boolean boolean54 = qualification45.equals((java.lang.Object) qualificationDTO53);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification45.toDTO();
        worker41.addQualification(qualification45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker41.getQualifications();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        worker41.addQualification(qualification61);
        boolean boolean64 = worker41.isAvailable();
        edu.colostate.cs415.model.Project project65 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker41, project65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.lang.String str15 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        edu.colostate.cs415.model.Worker worker66 = company10.createWorker("hi!:0:0:0:2:10", qualificationSet64, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet64, (double) (short) 10);
        edu.colostate.cs415.model.Project project69 = null;
        worker68.removeProject(project69);
        java.lang.String str71 = worker68.toString();
        edu.colostate.cs415.model.Project project72 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker68, project72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(worker66);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!:0:0:0:2:100:0:2:10" + "'", str71, "hi!:0:0:0:2:100:0:2:10");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.lang.String str60 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company58.getProjects();
        edu.colostate.cs415.model.Qualification qualification63 = company58.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray64 = new edu.colostate.cs415.model.Qualification[] { qualification42, qualification56, qualification63 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet65 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet65, qualificationArray64);
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet65, (double) (byte) 100);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        boolean boolean75 = qualification72.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO80 = qualification79.toDTO();
        boolean boolean81 = qualification72.equals((java.lang.Object) qualificationDTO80);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO82 = qualification72.toDTO();
        worker68.addQualification(qualification72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = worker68.getQualifications();
        java.lang.String str85 = worker68.toString();
        qualification3.addWorker(worker68);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO87 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0" + "'", str60, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(qualificationDTO80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualificationDTO82);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:0:0:0:2:100" + "'", str85, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationDTO87);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        int int51 = worker30.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = worker30.getProjects();
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean54 = worker30.willOverload(project53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(projectSet52);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = null;
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet68, 1.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project72 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(workerSet71);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker36.toDTO();
        edu.colostate.cs415.model.Project project57 = null;
        worker36.removeProject(project57);
        java.lang.String str59 = worker36.toString();
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker36.addProject(project60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:2:100" + "'", str59, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        java.lang.String str6 = qualification4.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        boolean boolean54 = qualification4.equals((java.lang.Object) qualificationSet53);
        edu.colostate.cs415.model.ProjectSize projectSize55 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project56 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:35", qualificationSet53, projectSize55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker35.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO54 = worker35.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker35.toDTO();
        boolean boolean56 = company1.equals((java.lang.Object) worker35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(workerDTO54);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet57);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.lang.String str16 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean26 = qualification23.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification30.toDTO();
        boolean boolean32 = qualification23.equals((java.lang.Object) qualificationDTO31);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.lang.String str41 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company39.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company39.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification23, qualification37, qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, (double) (byte) 100);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean56 = qualification53.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification60.toDTO();
        boolean boolean62 = qualification53.equals((java.lang.Object) qualificationDTO61);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification53.toDTO();
        worker49.addQualification(qualification53);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = worker49.getQualifications();
        edu.colostate.cs415.model.Worker worker67 = company11.createWorker("hi!:0:0:0:2:10", qualificationSet65, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet65, (double) (short) 10);
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project71 = company1.createProject("hi!:0:0:0:2:100", qualificationSet65, projectSize70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertNotNull(worker67);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        java.lang.String str35 = worker34.toString();
        java.lang.String str36 = worker34.getName();
        java.lang.String str37 = worker34.getName();
        java.lang.Class<?> wildcardClass38 = worker34.getClass();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0:0:2:10" + "'", str35, "hi!:0:0:0:2:10");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker35.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO54 = worker35.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker35.toDTO();
        boolean boolean56 = company1.equals((java.lang.Object) worker35);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification58 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(workerDTO54);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = worker41.getQualifications();
        qualification3.addWorker(worker41);
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = worker41.willOverload(project44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean17 = qualification8.equals((java.lang.Object) qualificationDTO16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.lang.String str26 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company24.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification22, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker36 = company2.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 100);
        java.lang.String str37 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project40 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet38, projectSize39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(worker36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet6, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker38.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO47 = worker38.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO48 = worker38.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = worker38.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertNotNull(workerDTO47);
        org.junit.Assert.assertNotNull(workerDTO48);
        org.junit.Assert.assertNotNull(projectSet49);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = worker38.getProjects();
        java.lang.String str59 = worker38.toString();
        edu.colostate.cs415.model.Project project60 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = worker38.willOverload(project60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(projectSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:2:100" + "'", str59, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        worker34.addQualification(qualification36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.lang.String str56 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company54.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company54.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        java.lang.String str65 = qualification63.toString();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        edu.colostate.cs415.model.Worker worker80 = null;
        qualification78.removeWorker(worker80);
        edu.colostate.cs415.model.Qualification[] qualificationArray82 = new edu.colostate.cs415.model.Qualification[] { qualification59, qualification63, qualification69, qualification74, qualification78 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet83 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet83, qualificationArray82);
        edu.colostate.cs415.model.Worker worker86 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet83, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker86.getQualifications();
        qualification42.addWorker(worker86);
        qualification36.removeWorker(worker86);
        edu.colostate.cs415.model.Project project90 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = worker86.willOverload(project90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(qualificationSet87);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) worker36);
        worker36.setSalary((double) 10L);
        double double56 = worker36.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 10.0d + "'", double56 == 10.0d);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        java.lang.Class<?> wildcardClass7 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company10.createQualification("hi!:0:0");
        java.lang.String str16 = qualification15.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        int int48 = worker47.getWorkload();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        worker47.addQualification(qualification52);
        qualification15.addWorker(worker47);
        double double55 = worker47.getSalary();
        boolean boolean56 = company1.equals((java.lang.Object) worker47);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 100.0d + "'", double55 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker36.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        boolean boolean64 = qualification61.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification68.toDTO();
        boolean boolean70 = qualification61.equals((java.lang.Object) qualificationDTO69);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification61.toDTO();
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company77.getUnavailableWorkers();
        java.lang.String str79 = company77.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company77.getProjects();
        edu.colostate.cs415.model.Qualification qualification82 = company77.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray83 = new edu.colostate.cs415.model.Qualification[] { qualification61, qualification75, qualification82 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet84 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet84, qualificationArray83);
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet84, (double) (byte) 100);
        int int88 = worker87.getWorkload();
        edu.colostate.cs415.model.Company company90 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification92 = company90.createQualification("hi!");
        worker87.addQualification(qualification92);
        boolean boolean94 = worker36.equals((java.lang.Object) worker87);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet95 = worker36.getProjects();
        java.lang.String str96 = worker36.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!:0:0" + "'", str79, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(qualificationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(qualification92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(projectSet95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "hi!:0:0" + "'", str96, "hi!:0:0");
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        worker40.addQualification(qualification44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker40.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = company2.createWorker("hi!:0:0:0:2:10", qualificationSet56, (double) 100.0f);
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project60 = new edu.colostate.cs415.model.Project("hi!:1:0", qualificationSet56, projectSize59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(worker58);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.lang.Class<?> wildcardClass11 = qualificationSet10.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        boolean boolean15 = company6.equals((java.lang.Object) boolean14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean29 = qualification26.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean35 = qualification26.equals((java.lang.Object) qualificationDTO34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification26.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.lang.String str44 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification47 = company42.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification26, qualification40, qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, (double) (byte) 100);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean59 = qualification56.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        boolean boolean65 = qualification56.equals((java.lang.Object) qualificationDTO64);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification56.toDTO();
        worker52.addQualification(qualification56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker52.getQualifications();
        boolean boolean69 = qualification19.equals((java.lang.Object) worker52);
        company6.unassignAll(worker52);
        worker52.setSalary((double) 1);
        int int73 = worker52.getWorkload();
        qualification3.addWorker(worker52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO75 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(qualificationDTO75);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker35.toDTO();
        edu.colostate.cs415.model.Project project57 = null;
        worker35.removeProject(project57);
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker35.addProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        boolean boolean56 = company47.equals((java.lang.Object) boolean55);
        java.lang.String str57 = company47.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company47.getQualifications();
        boolean boolean60 = worker38.equals((java.lang.Object) company47);
        edu.colostate.cs415.model.Qualification qualification62 = company47.createQualification("hi!:0:0:0:2:100:0:2:10");
        edu.colostate.cs415.model.Project project63 = null;
        // The following exception was thrown during execution in test generation
        try {
            company47.start(project63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualification62);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        worker30.removeProject(project47);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean61 = qualification58.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification65.toDTO();
        boolean boolean67 = qualification58.equals((java.lang.Object) qualificationDTO66);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification58.toDTO();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company74.getUnavailableWorkers();
        java.lang.String str76 = company74.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet77 = company74.getProjects();
        edu.colostate.cs415.model.Qualification qualification79 = company74.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray80 = new edu.colostate.cs415.model.Qualification[] { qualification58, qualification72, qualification79 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet81 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet81, qualificationArray80);
        edu.colostate.cs415.model.Worker worker84 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet81, (double) (byte) 100);
        int int85 = worker84.getWorkload();
        qualification52.removeWorker(worker84);
        worker30.addQualification(qualification52);
        edu.colostate.cs415.model.Project project88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = worker30.willOverload(project88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(qualificationDTO68);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!:0:0" + "'", str76, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet77);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(qualificationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification68 = company1.createQualification("hi!:0:0:0:2:35");
        edu.colostate.cs415.model.Worker worker69 = null;
        qualification68.removeWorker(worker69);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(qualification68);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.lang.String str9 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company7.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.lang.String str17 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company15.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company15.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean29 = qualification26.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean35 = qualification26.equals((java.lang.Object) qualificationDTO34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification26.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.lang.String str44 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification47 = company42.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray48 = new edu.colostate.cs415.model.Qualification[] { qualification26, qualification40, qualification47 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet49 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet49, qualificationArray48);
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet49, (double) (byte) 100);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean59 = qualification56.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        boolean boolean65 = qualification56.equals((java.lang.Object) qualificationDTO64);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification56.toDTO();
        worker52.addQualification(qualification56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = worker52.getQualifications();
        java.lang.String str69 = worker52.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = worker52.getQualifications();
        qualification20.removeWorker(worker52);
        qualification12.removeWorker(worker52);
        company1.unassignAll(worker52);
        edu.colostate.cs415.model.Project project74 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean75 = worker52.willOverload(project74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualificationSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0:0:2:100" + "'", str69, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet70);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        java.lang.String str27 = qualification25.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification40.removeWorker(worker42);
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification25, qualification31, qualification36, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        boolean boolean50 = worker48.isAvailable();
        boolean boolean51 = company6.equals((java.lang.Object) worker48);
        edu.colostate.cs415.model.Project project52 = null;
        worker48.removeProject(project52);
        qualification3.removeWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker48.toDTO();
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker48.addProject(project56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerDTO55);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) worker36);
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean55 = worker36.willOverload(project54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project67 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(workerSet66);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) workerSet42);
        worker30.addQualification(qualification36);
        java.lang.String str45 = worker30.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker30.toDTO();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker30.addProject(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerDTO46);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        int int40 = worker39.getWorkload();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str43 = company42.getName();
        boolean boolean44 = worker39.equals((java.lang.Object) str43);
        java.lang.String str45 = worker39.toString();
        java.lang.String str46 = worker39.toString();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker39, project47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0:0:2:100" + "'", str45, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0:0:2:100" + "'", str46, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet53, (double) 1);
        worker55.setSalary(10.0d);
        company1.unassignAll(worker55);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean66 = qualification63.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification70 = company68.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification70.toDTO();
        boolean boolean72 = qualification63.equals((java.lang.Object) qualificationDTO71);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO73 = qualification63.toDTO();
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company79.getUnavailableWorkers();
        java.lang.String str81 = company79.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet82 = company79.getProjects();
        edu.colostate.cs415.model.Qualification qualification84 = company79.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray85 = new edu.colostate.cs415.model.Qualification[] { qualification63, qualification77, qualification84 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet86 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet86, qualificationArray85);
        edu.colostate.cs415.model.Worker worker89 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet86, (double) (byte) 100);
        int int90 = worker89.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = worker89.getQualifications();
        edu.colostate.cs415.model.Project project92 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker89, project92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationDTO73);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!:0:0" + "'", str81, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet82);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(qualificationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(qualificationSet91);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        boolean boolean51 = worker30.equals((java.lang.Object) 0.0f);
        boolean boolean52 = worker30.isAvailable();
        java.lang.Class<?> wildcardClass53 = worker30.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        java.lang.String str14 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification27.removeWorker(worker29);
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification8, qualification12, qualification18, qualification23, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = worker35.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0.0f);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.lang.String str22 = qualification20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification35.removeWorker(worker37);
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification20, qualification26, qualification31, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = worker43.getQualifications();
        boolean boolean45 = worker43.isAvailable();
        boolean boolean46 = company1.equals((java.lang.Object) worker43);
        edu.colostate.cs415.model.Project project47 = null;
        worker43.removeProject(project47);
        int int49 = worker43.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:2:10");
        java.lang.String str8 = qualification7.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:2:10" + "'", str8, "hi!:0:0:0:2:10");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) workerSet42);
        worker30.addQualification(qualification36);
        java.lang.String str45 = worker30.getName();
        double double46 = worker30.getSalary();
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = worker30.willOverload(project47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 100.0d + "'", double46 == 100.0d);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet55, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company1.getAvailableWorkers();
        java.lang.String str60 = company1.getName();
        java.lang.String str61 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
        org.junit.Assert.assertNotNull(projectSet58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:1:0" + "'", str61, "hi!:1:0");
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO52 = worker30.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNotNull(workerDTO52);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = worker38.getProjects();
        java.lang.String str59 = worker38.toString();
        int int60 = worker38.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(projectSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:2:100" + "'", str59, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:2:100:0:0");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        worker67.setSalary((double) 100.0f);
        edu.colostate.cs415.model.Project project90 = null;
        worker67.removeProject(project90);
        edu.colostate.cs415.model.Project project92 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = worker67.willOverload(project92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        boolean boolean50 = worker30.isAvailable();
        boolean boolean51 = worker30.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker30.getQualifications();
        boolean boolean53 = worker30.isAvailable();
        worker30.setSalary((double) 100L);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean21 = qualification18.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        boolean boolean27 = qualification18.equals((java.lang.Object) qualificationDTO26);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.lang.String str36 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company34.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company34.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification18, qualification32, qualification39 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, (double) (byte) 100);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        worker44.addQualification(qualification48);
        boolean boolean60 = worker44.isAvailable();
        worker44.setSalary((double) (byte) 100);
        edu.colostate.cs415.model.Project project63 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker44, project63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        edu.colostate.cs415.model.Project project33 = null;
        worker32.removeProject(project33);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = worker32.getProjects();
        boolean boolean36 = company1.equals((java.lang.Object) worker32);
        edu.colostate.cs415.model.Project project37 = null;
        worker32.removeProject(project37);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = worker32.willOverload(project39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = null;
        edu.colostate.cs415.model.Worker worker70 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet68, 1.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = qualification75.getWorkers();
        boolean boolean77 = company1.equals((java.lang.Object) qualification75);
        java.lang.String str78 = company1.toString();
        edu.colostate.cs415.model.Company company81 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company81.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company81.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company81.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize85 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project86 = company1.createProject("hi!:0:0:0:2:35", qualificationSet84, projectSize85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNull(worker70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!:0:0" + "'", str78, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertNotNull(qualificationSet84);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) qualificationSet52);
        java.lang.String str54 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification3.toDTO();
        java.lang.Object obj57 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = qualification3.equals(obj57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: [Qualification.java] equals(): Cannot compare to null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        boolean boolean91 = qualification41.equals((java.lang.Object) worker74);
        boolean boolean92 = company1.equals((java.lang.Object) boolean91);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Worker worker95 = null;
        edu.colostate.cs415.model.Project project96 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker95, project96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(workerSet93);
        org.junit.Assert.assertNotNull(workerSet94);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.lang.String str38 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company1.getQualifications();
        java.lang.String str40 = company1.getName();
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) worker36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(workerSet54);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.lang.String str58 = qualification6.toString();
        java.lang.Class<?> wildcardClass59 = qualification6.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:1:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = worker46.getProjects();
        java.lang.String str67 = worker46.toString();
        edu.colostate.cs415.model.Project project68 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker46, project68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(projectSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!:0:0:0:2:100" + "'", str67, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean15 = qualification6.equals((java.lang.Object) qualificationDTO14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.lang.String str24 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company22.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray28 = new edu.colostate.cs415.model.Qualification[] { qualification6, qualification20, qualification27 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet29 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet29, qualificationArray28);
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet29, (double) (byte) 100);
        int int33 = worker32.getWorkload();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str36 = company35.getName();
        boolean boolean37 = worker32.equals((java.lang.Object) str36);
        java.lang.String str38 = worker32.toString();
        java.lang.String str39 = worker32.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = worker32.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100:0:2:10", qualificationSet40, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("", qualificationSet40, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Name must not be empty or null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0:0:2:100" + "'", str38, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0:0:2:100" + "'", str39, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.lang.String str7 = company2.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.lang.String str14 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company12.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        java.lang.String str23 = qualification21.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification36.removeWorker(worker38);
        edu.colostate.cs415.model.Qualification[] qualificationArray40 = new edu.colostate.cs415.model.Qualification[] { qualification17, qualification21, qualification27, qualification32, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet41 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet41, qualificationArray40);
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet41, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = worker44.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 0.0f);
        edu.colostate.cs415.model.Worker worker49 = company2.createWorker("hi!:0:0:0:2:100:0:2:10", qualificationSet45, (double) (short) 1);
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:12", qualificationSet45, (double) 1);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNull(worker49);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass4 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        boolean boolean17 = company1.equals((java.lang.Object) boolean16);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean31 = qualification22.equals((java.lang.Object) qualificationDTO30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company38.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification22, qualification36, qualification43 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) (byte) 100);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification59.toDTO();
        boolean boolean61 = qualification52.equals((java.lang.Object) qualificationDTO60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification52.toDTO();
        worker48.addQualification(qualification52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker48.getQualifications();
        java.lang.String str65 = worker48.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = worker48.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO67 = worker48.toDTO();
        company1.unassignAll(worker48);
        boolean boolean69 = worker48.isAvailable();
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean76 = qualification73.equals((java.lang.Object) 10.0f);
        worker48.addQualification(qualification73);
        java.lang.Class<?> wildcardClass78 = qualification73.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0:0:2:100" + "'", str65, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet66);
        org.junit.Assert.assertNotNull(workerDTO67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.dto.WorkerDTO workerDTO46 = worker38.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        java.lang.String str53 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company48.getUnavailableWorkers();
        boolean boolean55 = worker38.equals((java.lang.Object) workerSet54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker38.toDTO();
        java.lang.String str57 = worker38.toString();
        java.lang.String str58 = worker38.toString();
        java.lang.String str59 = worker38.getName();
        edu.colostate.cs415.dto.WorkerDTO workerDTO60 = worker38.toDTO();
        edu.colostate.cs415.model.Project project61 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker38.addProject(project61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerDTO46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0:0:2:100" + "'", str58, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerDTO60);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnassignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification40 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        boolean boolean7 = company1.equals((java.lang.Object) true);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.lang.String str16 = qualification15.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        java.lang.String str64 = worker47.toString();
        qualification15.addWorker(worker47);
        java.lang.String str66 = worker47.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = worker47.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize68 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project69 = company1.createProject("", qualificationSet67, projectSize68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!:0:0:0:2:100" + "'", str64, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet67);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:2:100:0:2:10");
        boolean boolean12 = company1.equals((java.lang.Object) 12);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean26 = qualification23.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification30.toDTO();
        boolean boolean32 = qualification23.equals((java.lang.Object) qualificationDTO31);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.lang.String str41 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company39.getProjects();
        edu.colostate.cs415.model.Qualification qualification44 = company39.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray45 = new edu.colostate.cs415.model.Qualification[] { qualification23, qualification37, qualification44 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet46 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet46, qualificationArray45);
        edu.colostate.cs415.model.Worker worker49 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet46, (double) (byte) 100);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean56 = qualification53.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification60.toDTO();
        boolean boolean62 = qualification53.equals((java.lang.Object) qualificationDTO61);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification53.toDTO();
        worker49.addQualification(qualification53);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = worker49.getQualifications();
        java.lang.String str66 = worker49.toString();
        qualification16.removeWorker(worker49);
        java.lang.String str68 = worker49.toString();
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker49, project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0:0:2:100" + "'", str66, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0:0:2:100" + "'", str68, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO42 = worker41.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = worker41.getProjects();
        company1.unassignAll(worker41);
        edu.colostate.cs415.model.Project project45 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker41.addProject(project45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(workerDTO42);
        org.junit.Assert.assertNotNull(projectSet43);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.lang.String str40 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification45 = company38.createQualification("hi!");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getUnavailableWorkers();
        java.lang.String str68 = company66.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet69 = company66.getProjects();
        edu.colostate.cs415.model.Qualification qualification71 = company66.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray72 = new edu.colostate.cs415.model.Qualification[] { qualification50, qualification64, qualification71 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet73 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet73, qualificationArray72);
        edu.colostate.cs415.model.Worker worker76 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet73, (double) (byte) 100);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification80.getWorkers();
        boolean boolean83 = qualification80.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company85 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification87 = company85.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification87.toDTO();
        boolean boolean89 = qualification80.equals((java.lang.Object) qualificationDTO88);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO90 = qualification80.toDTO();
        worker76.addQualification(qualification80);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet92 = worker76.getQualifications();
        boolean boolean93 = company38.equals((java.lang.Object) qualificationSet92);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet95 = null;
        edu.colostate.cs415.model.Worker worker97 = company38.createWorker("hi!:0:0", qualificationSet95, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet98 = company38.getEmployedWorkers();
        boolean boolean99 = company1.equals((java.lang.Object) workerSet98);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0" + "'", str68, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet69);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(qualificationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualification87);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(qualificationDTO90);
        org.junit.Assert.assertNotNull(qualificationSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(worker97);
        org.junit.Assert.assertNotNull(workerSet98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Project project4 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Project project68 = null;
        worker67.removeProject(project68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company76.getUnassignedWorkers();
        boolean boolean80 = qualification73.equals((java.lang.Object) workerSet79);
        worker67.addQualification(qualification73);
        company1.unassignAll(worker67);
        edu.colostate.cs415.dto.WorkerDTO workerDTO83 = worker67.toDTO();
        int int84 = worker67.getWorkload();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(workerDTO83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        int int70 = worker69.getWorkload();
        qualification3.removeWorker(worker69);
        edu.colostate.cs415.model.Project project72 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean73 = worker69.willOverload(project72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker30.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker30.getQualifications();
        worker30.setSalary((double) 100);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerDTO49);
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(qualificationSet51);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        java.lang.String str27 = qualification25.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification40.removeWorker(worker42);
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification25, qualification31, qualification36, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        boolean boolean50 = worker48.isAvailable();
        boolean boolean51 = company6.equals((java.lang.Object) worker48);
        edu.colostate.cs415.model.Project project52 = null;
        worker48.removeProject(project52);
        qualification3.removeWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker48.toDTO();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker48.getQualifications();
        java.lang.String str57 = worker48.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0" + "'", str57, "hi!:0:0");
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.lang.String str7 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company5.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        java.lang.String str16 = qualification14.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Worker worker31 = null;
        qualification29.removeWorker(worker31);
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification14, qualification20, qualification25, qualification29 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = worker37.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) 0.0f);
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100:0:2:10", qualificationSet38, 0.0d);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project44 = new edu.colostate.cs415.model.Project("hi!", qualificationSet38, projectSize43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet53, (double) 1);
        worker55.setSalary(10.0d);
        company1.unassignAll(worker55);
        boolean boolean59 = worker55.isAvailable();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        java.lang.String str6 = qualification4.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        boolean boolean54 = qualification4.equals((java.lang.Object) qualificationSet53);
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) (byte) 100);
        java.lang.String str57 = worker56.getName();
        boolean boolean58 = worker56.isAvailable();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker56.addProject(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company1.getProjects();
        edu.colostate.cs415.model.Project project40 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(projectSet39);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Project project3 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        java.lang.String str7 = company4.getName();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getAvailableWorkers();
        boolean boolean10 = company1.equals((java.lang.Object) workerSet9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean19 = qualification16.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification23.toDTO();
        boolean boolean25 = qualification16.equals((java.lang.Object) qualificationDTO24);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.lang.String str34 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification37 = company32.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray38 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification30, qualification37 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet39 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet39, qualificationArray38);
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet39, (double) (byte) 100);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean49 = qualification46.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification53.toDTO();
        boolean boolean55 = qualification46.equals((java.lang.Object) qualificationDTO54);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification46.toDTO();
        worker42.addQualification(qualification46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker42.getQualifications();
        java.lang.String str59 = worker42.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker42.getQualifications();
        company1.unassignAll(worker42);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:2:100" + "'", str59, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNotNull(projectSet62);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        worker30.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification35.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification35.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        edu.colostate.cs415.model.Project project70 = null;
        worker69.removeProject(project70);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = qualification75.getWorkers();
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company78.getUnassignedWorkers();
        boolean boolean82 = qualification75.equals((java.lang.Object) workerSet81);
        worker69.addQualification(qualification75);
        java.lang.String str84 = worker69.getName();
        double double85 = worker69.getSalary();
        edu.colostate.cs415.model.Company company87 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:10");
        boolean boolean88 = worker69.equals((java.lang.Object) company87);
        qualification35.removeWorker(worker69);
        java.lang.String str90 = qualification35.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0" + "'", str84, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 100.0d + "'", double85 == 100.0d);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        boolean boolean6 = company1.equals((java.lang.Object) (byte) 1);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        boolean boolean19 = company10.equals((java.lang.Object) boolean18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean33 = qualification30.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification37.toDTO();
        boolean boolean39 = qualification30.equals((java.lang.Object) qualificationDTO38);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification30.toDTO();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.lang.String str48 = company46.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company46.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company46.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray52 = new edu.colostate.cs415.model.Qualification[] { qualification30, qualification44, qualification51 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet53 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet53, qualificationArray52);
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet53, (double) (byte) 100);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean63 = qualification60.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification67.toDTO();
        boolean boolean69 = qualification60.equals((java.lang.Object) qualificationDTO68);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO70 = qualification60.toDTO();
        worker56.addQualification(qualification60);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = worker56.getQualifications();
        boolean boolean73 = qualification23.equals((java.lang.Object) worker56);
        company10.unassignAll(worker56);
        worker56.setSalary((double) 1);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = worker56.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize78 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project79 = company1.createProject("hi!:0:0:0:2:100:0:0", qualificationSet77, projectSize78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualificationDTO40);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet49);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(qualificationDTO68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(qualificationDTO70);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualificationSet77);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker36.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        boolean boolean64 = qualification61.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification68.toDTO();
        boolean boolean70 = qualification61.equals((java.lang.Object) qualificationDTO69);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification61.toDTO();
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company77.getUnavailableWorkers();
        java.lang.String str79 = company77.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company77.getProjects();
        edu.colostate.cs415.model.Qualification qualification82 = company77.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray83 = new edu.colostate.cs415.model.Qualification[] { qualification61, qualification75, qualification82 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet84 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet84, qualificationArray83);
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet84, (double) (byte) 100);
        int int88 = worker87.getWorkload();
        edu.colostate.cs415.model.Company company90 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification92 = company90.createQualification("hi!");
        worker87.addQualification(qualification92);
        boolean boolean94 = worker36.equals((java.lang.Object) worker87);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet95 = worker36.getProjects();
        edu.colostate.cs415.model.Project project96 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker36.addProject(project96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!:0:0" + "'", str79, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(qualificationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(qualification92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(projectSet95);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.dto.WorkerDTO workerDTO33 = worker30.toDTO();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(workerDTO33);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass6 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:2:10");
        java.lang.Class<?> wildcardClass10 = qualification9.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean12 = qualification3.equals((java.lang.Object) qualificationDTO11);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification3.toDTO();
        java.lang.String str14 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        edu.colostate.cs415.dto.WorkerDTO workerDTO65 = worker46.toDTO();
        edu.colostate.cs415.dto.WorkerDTO workerDTO66 = worker46.toDTO();
        qualification3.removeWorker(worker46);
        edu.colostate.cs415.model.Project project68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = worker46.willOverload(project68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(workerDTO65);
        org.junit.Assert.assertNotNull(workerDTO66);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        java.lang.String str39 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass5 = workerSet4.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        double double56 = worker36.getSalary();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 100.0d + "'", double56 == 100.0d);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker38.getQualifications();
        boolean boolean59 = worker38.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = worker38.getProjects();
        edu.colostate.cs415.model.Project project61 = null;
        worker38.removeProject(project61);
        int int63 = worker38.getWorkload();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        boolean boolean50 = worker30.isAvailable();
        boolean boolean51 = worker30.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = worker30.getProjects();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(projectSet52);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean20 = qualification11.equals((java.lang.Object) qualificationDTO19);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company27.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray33 = new edu.colostate.cs415.model.Qualification[] { qualification11, qualification25, qualification32 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet34 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet34, qualificationArray33);
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet34, (double) (byte) 100);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        worker37.addQualification(qualification41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = worker37.getQualifications();
        java.lang.String str54 = worker37.toString();
        qualification4.removeWorker(worker37);
        java.lang.String str56 = worker37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = worker37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker37.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize59 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project60 = new edu.colostate.cs415.model.Project("hi!:1:0", qualificationSet58, projectSize59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualificationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualificationSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0:0:2:100" + "'", str54, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0:0:2:100" + "'", str56, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!" + "'", str2, "hi!");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        java.lang.String str5 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company3.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company3.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean23 = qualification14.equals((java.lang.Object) qualificationDTO22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray36 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification28, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet37 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet37, qualificationArray36);
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet37, (double) (byte) 100);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        worker40.addQualification(qualification44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker40.getQualifications();
        java.lang.String str57 = worker40.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker40.getQualifications();
        qualification8.removeWorker(worker40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker40.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:0", qualificationSet60, 10.0d);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100:0:2:10", qualificationSet60, (double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertNotNull(qualificationSet60);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        boolean boolean65 = qualification62.equals((java.lang.Object) 10.0f);
        boolean boolean66 = company57.equals((java.lang.Object) boolean65);
        java.lang.String str67 = company57.getName();
        boolean boolean68 = worker35.equals((java.lang.Object) company57);
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker35.addProject(project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.lang.String str8 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company3.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean48 = qualification45.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification52.toDTO();
        boolean boolean54 = qualification45.equals((java.lang.Object) qualificationDTO53);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification45.toDTO();
        worker41.addQualification(qualification45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = worker41.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = company3.createWorker("hi!:0:0:0:2:10", qualificationSet57, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet57, (double) (short) 10);
        edu.colostate.cs415.model.ProjectSize projectSize62 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project63 = new edu.colostate.cs415.model.Project("hi!:1:0", qualificationSet57, projectSize62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationDTO55);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(worker59);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) qualificationSet52);
        java.lang.String str54 = qualification3.toString();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.lang.String str58 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company56.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company56.getProjects();
        java.lang.String str62 = company56.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company56.getAvailableWorkers();
        boolean boolean64 = qualification3.equals((java.lang.Object) company56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualificationDTO65);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        edu.colostate.cs415.model.Project project47 = null;
        worker30.removeProject(project47);
        worker30.setSalary((double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = worker30.getProjects();
        edu.colostate.cs415.dto.WorkerDTO workerDTO52 = worker30.toDTO();
        boolean boolean53 = worker30.isAvailable();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertNotNull(workerDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company9);
        java.lang.Class<?> wildcardClass15 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet55, (double) 100.0f);
        int int58 = worker57.getWorkload();
        boolean boolean59 = worker57.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        boolean boolean53 = qualification3.equals((java.lang.Object) qualificationSet52);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getUnavailableWorkers();
        java.lang.String str58 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company56.getProjects();
        edu.colostate.cs415.model.Qualification qualification61 = company56.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification65.toDTO();
        java.lang.String str67 = qualification65.toString();
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification80.getWorkers();
        edu.colostate.cs415.model.Worker worker82 = null;
        qualification80.removeWorker(worker82);
        edu.colostate.cs415.model.Qualification[] qualificationArray84 = new edu.colostate.cs415.model.Qualification[] { qualification61, qualification65, qualification71, qualification76, qualification80 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet85 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet85, qualificationArray84);
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet85, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO89 = worker88.toDTO();
        edu.colostate.cs415.model.Project project90 = null;
        worker88.removeProject(project90);
        qualification3.removeWorker(worker88);
        // The following exception was thrown during execution in test generation
        try {
            worker88.setSalary((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet59);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(qualification80);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(qualificationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(workerDTO89);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        java.lang.String str27 = qualification25.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification40.removeWorker(worker42);
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification25, qualification31, qualification36, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        boolean boolean50 = worker48.isAvailable();
        boolean boolean51 = company6.equals((java.lang.Object) worker48);
        edu.colostate.cs415.model.Project project52 = null;
        worker48.removeProject(project52);
        qualification3.removeWorker(worker48);
        edu.colostate.cs415.dto.WorkerDTO workerDTO55 = worker48.toDTO();
        java.lang.Class<?> wildcardClass56 = worker48.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerDTO55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = worker30.getProjects();
        int int52 = worker30.getWorkload();
        edu.colostate.cs415.model.Project project53 = null;
        worker30.removeProject(project53);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker35.toDTO();
        int int57 = worker35.getWorkload();
        edu.colostate.cs415.dto.WorkerDTO workerDTO58 = worker35.toDTO();
        java.lang.Class<?> wildcardClass59 = worker35.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(workerDTO58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        qualification6.removeWorker(worker46);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO67 = qualification6.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification6.getWorkers();
        java.lang.String str69 = qualification6.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO70 = qualification6.toDTO();
        java.lang.Class<?> wildcardClass71 = qualificationDTO70.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationDTO67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        qualification6.removeWorker(worker38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = worker38.getQualifications();
        boolean boolean59 = worker38.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = worker38.getProjects();
        java.lang.String str61 = worker38.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.lang.String str43 = qualification42.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        java.lang.String str91 = worker74.toString();
        qualification42.addWorker(worker74);
        java.lang.String str93 = worker74.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet94 = worker74.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize95 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project96 = company1.createProject("hi!:0:0:0:2:100:0:2:10", qualificationSet94, projectSize95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0:0:2:100" + "'", str91, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!:0:0" + "'", str93, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet94);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        boolean boolean8 = qualification5.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean14 = qualification5.equals((java.lang.Object) qualificationDTO13);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        java.lang.String str23 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company21.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray27 = new edu.colostate.cs415.model.Qualification[] { qualification5, qualification19, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet28 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet28, qualificationArray27);
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet28, (double) 1.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = worker33.getProjects();
        boolean boolean35 = worker33.isAvailable();
        boolean boolean36 = worker33.isAvailable();
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:100", qualificationSet8, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean19 = qualification10.equals((java.lang.Object) qualificationDTO18);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company26.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray32 = new edu.colostate.cs415.model.Qualification[] { qualification10, qualification24, qualification31 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet33 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet33, qualificationArray32);
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet33, (double) (byte) 100);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean49 = qualification40.equals((java.lang.Object) qualificationDTO48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification40.toDTO();
        worker36.addQualification(qualification40);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = worker36.getQualifications();
        java.lang.String str53 = worker36.toString();
        qualification3.removeWorker(worker36);
        java.lang.String str55 = worker36.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO56 = worker36.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        boolean boolean64 = qualification61.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO69 = qualification68.toDTO();
        boolean boolean70 = qualification61.equals((java.lang.Object) qualificationDTO69);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO71 = qualification61.toDTO();
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification75 = company73.createQualification("hi!");
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company77.getUnavailableWorkers();
        java.lang.String str79 = company77.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet80 = company77.getProjects();
        edu.colostate.cs415.model.Qualification qualification82 = company77.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray83 = new edu.colostate.cs415.model.Qualification[] { qualification61, qualification75, qualification82 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet84 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet84, qualificationArray83);
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet84, (double) (byte) 100);
        int int88 = worker87.getWorkload();
        edu.colostate.cs415.model.Company company90 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification92 = company90.createQualification("hi!");
        worker87.addQualification(qualification92);
        boolean boolean94 = worker36.equals((java.lang.Object) worker87);
        edu.colostate.cs415.model.Project project95 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = worker87.willOverload(project95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualificationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0:0:2:100" + "'", str53, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO56);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationDTO69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualificationDTO71);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!:0:0" + "'", str79, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(qualificationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(qualification92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = company1.getAvailableWorkers();
        java.lang.String str91 = company1.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification93 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Description when creating a Qualification must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification89);
        org.junit.Assert.assertNotNull(workerSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0" + "'", str91, "hi!:0:0");
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        worker30.addQualification(qualification35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification35.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getUnavailableWorkers();
        java.lang.String str60 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company58.getProjects();
        edu.colostate.cs415.model.Qualification qualification63 = company58.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray64 = new edu.colostate.cs415.model.Qualification[] { qualification42, qualification56, qualification63 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet65 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet65, qualificationArray64);
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet65, (double) (byte) 100);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        boolean boolean75 = qualification72.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification79 = company77.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO80 = qualification79.toDTO();
        boolean boolean81 = qualification72.equals((java.lang.Object) qualificationDTO80);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO82 = qualification72.toDTO();
        worker68.addQualification(qualification72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = worker68.getQualifications();
        java.lang.String str85 = worker68.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = worker68.getQualifications();
        java.lang.String str87 = worker68.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO88 = worker68.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet89 = worker68.getProjects();
        worker68.setSalary((double) 0.0f);
        qualification35.addWorker(worker68);
        java.lang.String str93 = qualification35.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0" + "'", str60, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertNotNull(qualificationDTO80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualificationDTO82);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:0:0:0:2:100" + "'", str85, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!:0:0:0:2:100" + "'", str87, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO88);
        org.junit.Assert.assertNotNull(projectSet89);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company2.createWorker("hi!:0:0:0:2:35", qualificationSet17, (double) (short) 1);
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project21 = new edu.colostate.cs415.model.Project("", qualificationSet17, projectSize20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNull(worker19);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        boolean boolean30 = qualification21.equals((java.lang.Object) qualificationDTO29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.lang.String str39 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company37.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray43 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification35, qualification42 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet44 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet44, qualificationArray43);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet44, (double) (byte) 100);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        worker47.addQualification(qualification51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker47.getQualifications();
        boolean boolean64 = qualification14.equals((java.lang.Object) worker47);
        company1.unassignAll(worker47);
        worker47.setSalary((double) 1);
        int int68 = worker47.getWorkload();
        java.lang.String str69 = worker47.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationDTO31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company41.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company41.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        java.lang.String str52 = qualification50.toString();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        edu.colostate.cs415.model.Worker worker67 = null;
        qualification65.removeWorker(worker67);
        edu.colostate.cs415.model.Qualification[] qualificationArray69 = new edu.colostate.cs415.model.Qualification[] { qualification46, qualification50, qualification56, qualification61, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet70 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet70, qualificationArray69);
        edu.colostate.cs415.model.Worker worker73 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet70, (double) 10);
        java.lang.String str74 = worker73.toString();
        company1.unassignAll(worker73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = company1.getAssignedWorkers();
        java.lang.String str77 = company1.getName();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(qualificationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!:0:0:0:2:10" + "'", str74, "hi!:0:0:0:2:10");
        org.junit.Assert.assertNotNull(workerSet76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Project project31 = null;
        worker30.removeProject(project31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) workerSet42);
        worker30.addQualification(qualification36);
        java.lang.String str45 = worker30.getName();
        edu.colostate.cs415.model.Project project46 = null;
        worker30.removeProject(project46);
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        java.lang.String str54 = worker35.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker35.getQualifications();
        worker35.setSalary((double) 100L);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet55);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        java.lang.Class<?> wildcardClass14 = qualificationSet13.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker6 = null;
        qualification3.removeWorker(worker6);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:2:10");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        java.lang.String str54 = worker35.getName();
        edu.colostate.cs415.model.Project project55 = null;
        worker35.removeProject(project55);
        edu.colostate.cs415.model.Project project57 = null;
        worker35.removeProject(project57);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        java.lang.String str44 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company39.getEmployedWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getUnavailableWorkers();
        java.lang.String str69 = company67.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet70 = company67.getProjects();
        edu.colostate.cs415.model.Qualification qualification72 = company67.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray73 = new edu.colostate.cs415.model.Qualification[] { qualification51, qualification65, qualification72 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet74 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet74, qualificationArray73);
        edu.colostate.cs415.model.Worker worker77 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet74, (double) (byte) 100);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = qualification81.getWorkers();
        boolean boolean84 = qualification81.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification88.toDTO();
        boolean boolean90 = qualification81.equals((java.lang.Object) qualificationDTO89);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO91 = qualification81.toDTO();
        worker77.addQualification(qualification81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet93 = worker77.getQualifications();
        edu.colostate.cs415.model.Worker worker95 = company39.createWorker("hi!:0:0:0:2:10", qualificationSet93, (double) 100.0f);
        edu.colostate.cs415.model.Worker worker97 = company1.createWorker("hi!", qualificationSet93, 100.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet98 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet70);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(qualificationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(qualificationDTO89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(qualificationDTO91);
        org.junit.Assert.assertNotNull(qualificationSet93);
        org.junit.Assert.assertNotNull(worker95);
        org.junit.Assert.assertNull(worker97);
        org.junit.Assert.assertNotNull(workerSet98);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        worker34.addQualification(qualification36);
        java.lang.String str39 = qualification36.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification36.toDTO();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO40);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        java.lang.String str27 = qualification25.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification40.removeWorker(worker42);
        edu.colostate.cs415.model.Qualification[] qualificationArray44 = new edu.colostate.cs415.model.Qualification[] { qualification21, qualification25, qualification31, qualification36, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet45 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet45, qualificationArray44);
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet45, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        boolean boolean50 = worker48.isAvailable();
        boolean boolean51 = company6.equals((java.lang.Object) worker48);
        edu.colostate.cs415.model.Project project52 = null;
        worker48.removeProject(project52);
        qualification3.removeWorker(worker48);
        java.lang.String str55 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.getName();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = worker74.getQualifications();
        boolean boolean91 = qualification41.equals((java.lang.Object) worker74);
        boolean boolean92 = company1.equals((java.lang.Object) boolean91);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet95 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationDTO43);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertNotNull(qualificationSet90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(workerSet93);
        org.junit.Assert.assertNotNull(workerSet94);
        org.junit.Assert.assertNotNull(workerSet95);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:2:10");
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str34 = company33.getName();
        boolean boolean35 = worker30.equals((java.lang.Object) str34);
        java.lang.String str36 = worker30.toString();
        java.lang.String str37 = worker30.toString();
        edu.colostate.cs415.model.Qualification qualification39 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean47 = qualification44.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        boolean boolean53 = qualification44.equals((java.lang.Object) qualificationDTO52);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification44.toDTO();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getUnavailableWorkers();
        java.lang.String str62 = company60.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company60.getProjects();
        edu.colostate.cs415.model.Qualification qualification65 = company60.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray66 = new edu.colostate.cs415.model.Qualification[] { qualification44, qualification58, qualification65 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet67 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet67, qualificationArray66);
        edu.colostate.cs415.model.Worker worker70 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet67, (double) (byte) 100);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean77 = qualification74.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO82 = qualification81.toDTO();
        boolean boolean83 = qualification74.equals((java.lang.Object) qualificationDTO82);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO84 = qualification74.toDTO();
        worker70.addQualification(qualification74);
        boolean boolean86 = worker70.isAvailable();
        worker70.setSalary((double) (byte) 100);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet89 = worker70.getProjects();
        boolean boolean90 = qualification39.equals((java.lang.Object) projectSet89);
        java.lang.String str91 = qualification39.toString();
        worker30.addQualification(qualification39);
        java.lang.String str93 = worker30.toString();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0:0:2:100" + "'", str36, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0:0:2:100" + "'", str37, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationDTO54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(qualificationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(workerSet75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertNotNull(qualificationDTO82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualificationDTO84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(projectSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0" + "'", str91, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!:0:0:0:2:100" + "'", str93, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = qualification89.getWorkers();
        java.lang.Class<?> wildcardClass91 = workerSet90.getClass();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification89);
        org.junit.Assert.assertNotNull(workerSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:2:100");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.lang.String str12 = company8.toString();
        edu.colostate.cs415.model.Qualification qualification14 = company8.createQualification("hi!:0:0:0:2:100:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker17 = company1.createWorker("", qualificationSet15, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Name when creating a Worker must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean24 = qualification15.equals((java.lang.Object) qualificationDTO23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.lang.String str33 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company31.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification15, qualification29, qualification36 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) (byte) 100);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        boolean boolean52 = company43.equals((java.lang.Object) boolean51);
        java.lang.String str53 = company43.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company43.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company43.getQualifications();
        boolean boolean56 = worker41.equals((java.lang.Object) qualificationSet55);
        edu.colostate.cs415.model.Worker worker58 = company2.createWorker("hi!", qualificationSet55, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:35", qualificationSet55, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications must not be null or empty.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker58);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet92 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification89);
        org.junit.Assert.assertNotNull(workerSet90);
        org.junit.Assert.assertNotNull(qualificationSet91);
        org.junit.Assert.assertNotNull(workerSet92);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        worker34.addQualification(qualification36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.lang.String str56 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company54.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company54.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        java.lang.String str65 = qualification63.toString();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        edu.colostate.cs415.model.Worker worker80 = null;
        qualification78.removeWorker(worker80);
        edu.colostate.cs415.model.Qualification[] qualificationArray82 = new edu.colostate.cs415.model.Qualification[] { qualification59, qualification63, qualification69, qualification74, qualification78 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet83 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet83, qualificationArray82);
        edu.colostate.cs415.model.Worker worker86 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet83, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker86.getQualifications();
        qualification42.addWorker(worker86);
        qualification36.removeWorker(worker86);
        edu.colostate.cs415.model.Worker worker90 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification36.addWorker(worker90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null worker.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(qualificationSet87);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        java.lang.String str39 = company1.getName();
        java.lang.String str40 = company1.getName();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        java.lang.String str43 = qualification41.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean51 = qualification48.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO56 = qualification55.toDTO();
        boolean boolean57 = qualification48.equals((java.lang.Object) qualificationDTO56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification48.toDTO();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company64.getUnavailableWorkers();
        java.lang.String str66 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company64.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company64.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray70 = new edu.colostate.cs415.model.Qualification[] { qualification48, qualification62, qualification69 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet71 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet71, qualificationArray70);
        edu.colostate.cs415.model.Worker worker74 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet71, (double) (byte) 100);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        boolean boolean81 = qualification78.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO86 = qualification85.toDTO();
        boolean boolean87 = qualification78.equals((java.lang.Object) qualificationDTO86);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO88 = qualification78.toDTO();
        worker74.addQualification(qualification78);
        boolean boolean90 = qualification41.equals((java.lang.Object) qualification78);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO91 = qualification78.toDTO();
        boolean boolean92 = company1.equals((java.lang.Object) qualificationDTO91);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet93 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet94 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationDTO56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet67);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(qualificationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification85);
        org.junit.Assert.assertNotNull(qualificationDTO86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(qualificationDTO88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(qualificationDTO91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(projectSet93);
        org.junit.Assert.assertNotNull(workerSet94);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company9);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!:0:0");
        java.lang.String str22 = qualification21.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean30 = qualification27.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification34.toDTO();
        boolean boolean36 = qualification27.equals((java.lang.Object) qualificationDTO35);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.lang.String str45 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company43.getProjects();
        edu.colostate.cs415.model.Qualification qualification48 = company43.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray49 = new edu.colostate.cs415.model.Qualification[] { qualification27, qualification41, qualification48 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet50 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet50, qualificationArray49);
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet50, (double) (byte) 100);
        int int54 = worker53.getWorkload();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        worker53.addQualification(qualification58);
        qualification21.addWorker(worker53);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        boolean boolean70 = qualification67.equals((java.lang.Object) 10.0f);
        boolean boolean71 = company62.equals((java.lang.Object) boolean70);
        java.lang.String str72 = company62.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company62.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company62.getQualifications();
        boolean boolean75 = worker53.equals((java.lang.Object) company62);
        edu.colostate.cs415.model.Project project76 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker53, project76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(qualificationSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        boolean boolean56 = company1.equals((java.lang.Object) qualificationSet55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = null;
        edu.colostate.cs415.model.Worker worker60 = company1.createWorker("hi!:0:0", qualificationSet58, (double) '#');
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass62 = workerSet61.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(worker60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        java.lang.String str38 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = null;
        edu.colostate.cs415.model.Worker worker42 = company1.createWorker("hi!:0:0:0:0", qualificationSet40, (double) 100L);
        edu.colostate.cs415.model.Project project43 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNull(worker42);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO35 = worker34.toDTO();
        int int36 = worker34.getWorkload();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(workerDTO35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        edu.colostate.cs415.model.Project project54 = null;
        worker35.removeProject(project54);
        edu.colostate.cs415.model.Project project56 = null;
        worker35.removeProject(project56);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        worker34.addQualification(qualification36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.lang.String str56 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company54.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company54.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        java.lang.String str65 = qualification63.toString();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        edu.colostate.cs415.model.Worker worker80 = null;
        qualification78.removeWorker(worker80);
        edu.colostate.cs415.model.Qualification[] qualificationArray82 = new edu.colostate.cs415.model.Qualification[] { qualification59, qualification63, qualification69, qualification74, qualification78 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet83 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet83, qualificationArray82);
        edu.colostate.cs415.model.Worker worker86 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet83, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker86.getQualifications();
        qualification42.addWorker(worker86);
        qualification36.removeWorker(worker86);
        java.lang.Class<?> wildcardClass90 = qualification36.getClass();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(qualificationSet87);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.lang.String str7 = qualification5.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        boolean boolean55 = qualification5.equals((java.lang.Object) qualificationSet54);
        edu.colostate.cs415.model.Worker worker57 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) (byte) 100);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project59 = new edu.colostate.cs415.model.Project("hi!:0:0:0:2:100:0:2:10:0:2:0", qualificationSet54, projectSize58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean44 = qualification41.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification48.toDTO();
        boolean boolean50 = qualification41.equals((java.lang.Object) qualificationDTO49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification41.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.lang.String str59 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        edu.colostate.cs415.model.Qualification qualification62 = company57.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray63 = new edu.colostate.cs415.model.Qualification[] { qualification41, qualification55, qualification62 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet64 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet64, qualificationArray63);
        edu.colostate.cs415.model.Worker worker67 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet64, (double) (byte) 100);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean74 = qualification71.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification78.toDTO();
        boolean boolean80 = qualification71.equals((java.lang.Object) qualificationDTO79);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO81 = qualification71.toDTO();
        worker67.addQualification(qualification71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet83 = worker67.getQualifications();
        java.lang.String str84 = worker67.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = worker67.getQualifications();
        java.lang.String str86 = worker67.toString();
        company1.unassignAll(worker67);
        edu.colostate.cs415.model.Qualification qualification89 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet90 = company1.getAvailableWorkers();
        java.lang.String str91 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet92 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertNotNull(qualification62);
        org.junit.Assert.assertNotNull(qualificationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(qualificationDTO79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(qualificationDTO81);
        org.junit.Assert.assertNotNull(qualificationSet83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!:0:0:0:2:100" + "'", str84, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:2:100" + "'", str86, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualification89);
        org.junit.Assert.assertNotNull(workerSet90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!:0:0" + "'", str91, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet92);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.lang.String str20 = qualification18.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification33.removeWorker(worker35);
        edu.colostate.cs415.model.Qualification[] qualificationArray37 = new edu.colostate.cs415.model.Qualification[] { qualification14, qualification18, qualification24, qualification29, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet38 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet38, qualificationArray37);
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet38, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO42 = worker41.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = worker41.getProjects();
        company1.unassignAll(worker41);
        int int45 = worker41.getWorkload();
        // The following exception was thrown during execution in test generation
        try {
            worker41.setSalary((double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must not be negative.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(workerDTO42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = worker30.getQualifications();
        java.lang.String str49 = worker30.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker30.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = worker30.getProjects();
        int int52 = worker30.getWorkload();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet53 = worker30.getProjects();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0:0:2:100" + "'", str49, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(projectSet53);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company9.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean29 = qualification20.equals((java.lang.Object) qualificationDTO28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.lang.String str38 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company36.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray42 = new edu.colostate.cs415.model.Qualification[] { qualification20, qualification34, qualification41 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet43 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet43, qualificationArray42);
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet43, (double) (byte) 100);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean53 = qualification50.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification57.toDTO();
        boolean boolean59 = qualification50.equals((java.lang.Object) qualificationDTO58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO60 = qualification50.toDTO();
        worker46.addQualification(qualification50);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = worker46.getQualifications();
        java.lang.String str63 = worker46.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = worker46.getQualifications();
        qualification14.removeWorker(worker46);
        qualification6.removeWorker(worker46);
        int int67 = worker46.getWorkload();
        double double68 = worker46.getSalary();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationDTO60);
        org.junit.Assert.assertNotNull(qualificationSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!:0:0:0:2:100" + "'", str63, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean37 = qualification34.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification41.toDTO();
        boolean boolean43 = qualification34.equals((java.lang.Object) qualificationDTO42);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification34.toDTO();
        worker30.addQualification(qualification34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = worker30.getQualifications();
        java.lang.String str47 = worker30.toString();
        java.lang.String str48 = worker30.getName();
        int int49 = worker30.getWorkload();
        worker30.setSalary((double) '#');
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = worker30.willOverload(project52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:2:100" + "'", str47, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        boolean boolean9 = qualification6.equals((java.lang.Object) 10.0f);
        boolean boolean10 = company1.equals((java.lang.Object) boolean9);
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:2:10");
        java.lang.String str14 = company1.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification26.toDTO();
        boolean boolean28 = qualification19.equals((java.lang.Object) qualificationDTO27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification19.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.lang.String str37 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray41 = new edu.colostate.cs415.model.Qualification[] { qualification19, qualification33, qualification40 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet42 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet42, qualificationArray41);
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet42, (double) (byte) 100);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean52 = qualification49.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        boolean boolean58 = qualification49.equals((java.lang.Object) qualificationDTO57);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification49.toDTO();
        worker45.addQualification(qualification49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = worker45.getQualifications();
        java.lang.String str62 = worker45.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker45.getQualifications();
        java.lang.String str64 = worker45.toString();
        edu.colostate.cs415.dto.WorkerDTO workerDTO65 = worker45.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = worker45.getProjects();
        worker45.setSalary((double) 0.0f);
        edu.colostate.cs415.model.Project project69 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker45, project69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(qualificationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0:0:2:100" + "'", str62, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!:0:0:0:2:100" + "'", str64, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(workerDTO65);
        org.junit.Assert.assertNotNull(projectSet66);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.model.Qualification qualification36 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        worker34.addQualification(qualification36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getUnavailableWorkers();
        java.lang.String str56 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company54.getProjects();
        edu.colostate.cs415.model.Qualification qualification59 = company54.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification63.toDTO();
        java.lang.String str65 = qualification63.toString();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification78.getWorkers();
        edu.colostate.cs415.model.Worker worker80 = null;
        qualification78.removeWorker(worker80);
        edu.colostate.cs415.model.Qualification[] qualificationArray82 = new edu.colostate.cs415.model.Qualification[] { qualification59, qualification63, qualification69, qualification74, qualification78 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet83 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet83, qualificationArray82);
        edu.colostate.cs415.model.Worker worker86 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet83, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = worker86.getQualifications();
        qualification42.addWorker(worker86);
        qualification36.removeWorker(worker86);
        edu.colostate.cs415.model.Worker worker90 = null;
        qualification36.removeWorker(worker90);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(qualificationDTO64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertNotNull(qualificationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(qualificationSet87);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean13 = qualification4.equals((java.lang.Object) qualificationDTO12);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray26 = new edu.colostate.cs415.model.Qualification[] { qualification4, qualification18, qualification25 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet27 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet27, qualificationArray26);
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet27, (double) (byte) 100);
        int int31 = worker30.getWorkload();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str34 = company33.getName();
        boolean boolean35 = worker30.equals((java.lang.Object) str34);
        java.lang.Class<?> wildcardClass36 = worker30.getClass();
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = qualification6.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        int int39 = worker38.getWorkload();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        worker38.addQualification(qualification43);
        qualification6.addWorker(worker38);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean55 = qualification52.equals((java.lang.Object) 10.0f);
        boolean boolean56 = company47.equals((java.lang.Object) boolean55);
        java.lang.String str57 = company47.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company47.getQualifications();
        boolean boolean60 = worker38.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company47.getQualifications();
        java.lang.String str62 = company47.getName();
        java.lang.String str63 = company47.getName();
        edu.colostate.cs415.model.Worker worker64 = null;
        edu.colostate.cs415.model.Project project65 = null;
        // The following exception was thrown during execution in test generation
        try {
            company47.assign(worker64, project65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker and Project Arguments may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification44.toDTO();
        java.lang.String str46 = qualification44.toString();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean54 = qualification51.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO59 = qualification58.toDTO();
        boolean boolean60 = qualification51.equals((java.lang.Object) qualificationDTO59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification51.toDTO();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getUnavailableWorkers();
        java.lang.String str69 = company67.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet70 = company67.getProjects();
        edu.colostate.cs415.model.Qualification qualification72 = company67.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray73 = new edu.colostate.cs415.model.Qualification[] { qualification51, qualification65, qualification72 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet74 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet74, qualificationArray73);
        edu.colostate.cs415.model.Worker worker77 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet74, (double) (byte) 100);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = qualification81.getWorkers();
        boolean boolean84 = qualification81.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification88 = company86.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO89 = qualification88.toDTO();
        boolean boolean90 = qualification81.equals((java.lang.Object) qualificationDTO89);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO91 = qualification81.toDTO();
        worker77.addQualification(qualification81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet93 = worker77.getQualifications();
        boolean boolean94 = qualification44.equals((java.lang.Object) qualificationSet93);
        edu.colostate.cs415.model.Worker worker96 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet93, (double) (byte) 100);
        qualification3.removeWorker(worker96);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet98 = worker96.getProjects();
        java.lang.String str99 = worker96.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertNotNull(qualificationDTO39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationDTO59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationDTO61);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!:0:0" + "'", str69, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet70);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(qualificationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertNotNull(qualificationDTO89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(qualificationDTO91);
        org.junit.Assert.assertNotNull(qualificationSet93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(projectSet98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "hi!:0:2:100" + "'", str99, "hi!:0:2:100");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean21 = qualification12.equals((java.lang.Object) qualificationDTO20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company28.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray34 = new edu.colostate.cs415.model.Qualification[] { qualification12, qualification26, qualification33 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet35 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet35, qualificationArray34);
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet35, (double) (byte) 100);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification49.toDTO();
        boolean boolean51 = qualification42.equals((java.lang.Object) qualificationDTO50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification42.toDTO();
        worker38.addQualification(qualification42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = worker38.getQualifications();
        java.lang.String str55 = worker38.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = worker38.getQualifications();
        java.lang.String str57 = worker38.toString();
        boolean boolean58 = worker38.isAvailable();
        boolean boolean59 = worker38.isAvailable();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = worker38.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:2:10", qualificationSet60, (double) 100.0f);
        company1.unassignAll(worker62);
        edu.colostate.cs415.model.Project project64 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker62.addProject(project64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot add a null project.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:2:100" + "'", str55, "hi!:0:0:0:2:100");
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!:0:0:0:2:100" + "'", str57, "hi!:0:0:0:2:100");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualificationSet60);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        int int36 = worker35.getWorkload();
        qualification3.removeWorker(worker35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray65 = new edu.colostate.cs415.model.Qualification[] { qualification43, qualification57, qualification64 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet66 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet66, qualificationArray65);
        edu.colostate.cs415.model.Worker worker69 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet66, (double) (byte) 100);
        int int70 = worker69.getWorkload();
        qualification3.removeWorker(worker69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = worker69.getQualifications();
        boolean boolean73 = worker69.isAvailable();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(qualificationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.lang.String str22 = qualification20.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification35.removeWorker(worker37);
        edu.colostate.cs415.model.Qualification[] qualificationArray39 = new edu.colostate.cs415.model.Qualification[] { qualification16, qualification20, qualification26, qualification31, qualification35 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet40 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet40, qualificationArray39);
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet40, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = worker43.getQualifications();
        boolean boolean45 = worker43.isAvailable();
        boolean boolean46 = company1.equals((java.lang.Object) worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification49 = company1.createQualification("hi!:0:0:0:2:35");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification49);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project40 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} Cannot start a project that isn't in the company.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean22 = qualification13.equals((java.lang.Object) qualificationDTO21);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.lang.String str31 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray35 = new edu.colostate.cs415.model.Qualification[] { qualification13, qualification27, qualification34 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet36 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet36, qualificationArray35);
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet36, (double) (byte) 100);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean46 = qualification43.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification50.toDTO();
        boolean boolean52 = qualification43.equals((java.lang.Object) qualificationDTO51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification43.toDTO();
        worker39.addQualification(qualification43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker39.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company1.createWorker("hi!:0:0:0:2:10", qualificationSet55, (double) 100.0f);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.lang.String str61 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        edu.colostate.cs415.model.Qualification qualification64 = company59.createQualification("hi!:0:0");
        java.lang.String str65 = qualification64.toString();
        worker57.addQualification(qualification64);
        java.lang.String str67 = qualification64.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0" + "'", str31, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualificationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!:0:0" + "'", str65, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!:0:0" + "'", str67, "hi!:0:0");
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.lang.String str8 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project15 = company1.createProject("hi!:1:0", qualificationSet13, projectSize14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100:0:2:10:0:2:0");
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        boolean boolean10 = qualification7.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean16 = qualification7.equals((java.lang.Object) qualificationDTO15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company23.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray29 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification21, qualification28 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet30 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet30, qualificationArray29);
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) (byte) 100);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet30, (double) 100);
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company39.getProjects();
        java.lang.String str42 = company39.getName();
        java.lang.String str43 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getAvailableWorkers();
        boolean boolean45 = company1.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(worker35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(projectSet48);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project may not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean18 = qualification9.equals((java.lang.Object) qualificationDTO17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification[] qualificationArray31 = new edu.colostate.cs415.model.Qualification[] { qualification9, qualification23, qualification30 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet32 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet32, qualificationArray31);
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet32, (double) (byte) 100);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0f);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification46.toDTO();
        boolean boolean48 = qualification39.equals((java.lang.Object) qualificationDTO47);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification39.toDTO();
        worker35.addQualification(qualification39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = worker35.getQualifications();
        java.lang.String str52 = worker35.toString();
        qualification3.addWorker(worker35);
        java.lang.String str54 = worker35.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = worker35.getQualifications();
        edu.colostate.cs415.model.Project project56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = worker35.willOverload(project56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(qualificationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationDTO47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0:0:2:100" + "'", str52, "hi!:0:0:0:2:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet55);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification3.removeWorker(worker5);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getAvailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company30.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification39.toDTO();
        java.lang.String str41 = qualification39.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Worker worker56 = null;
        qualification54.removeWorker(worker56);
        edu.colostate.cs415.model.Qualification[] qualificationArray58 = new edu.colostate.cs415.model.Qualification[] { qualification35, qualification39, qualification45, qualification50, qualification54 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet59 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet59, qualificationArray58);
        edu.colostate.cs415.model.Worker worker62 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet59, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = worker62.getQualifications();
        boolean boolean64 = worker62.isAvailable();
        boolean boolean65 = company20.equals((java.lang.Object) worker62);
        edu.colostate.cs415.model.Project project66 = null;
        worker62.removeProject(project66);
        qualification17.removeWorker(worker62);
        company8.unassignAll(worker62);
        qualification3.removeWorker(worker62);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationDTO40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualificationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company2.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification26.removeWorker(worker28);
        edu.colostate.cs415.model.Qualification[] qualificationArray30 = new edu.colostate.cs415.model.Qualification[] { qualification7, qualification11, qualification17, qualification22, qualification26 };
        java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification> qualificationSet31 = new java.util.LinkedHashSet<edu.colostate.cs415.model.Qualification>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<edu.colostate.cs415.model.Qualification>) qualificationSet31, qualificationArray30);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0", (java.util.Set<edu.colostate.cs415.model.Qualification>) qualificationSet31, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO35 = worker34.toDTO();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = worker34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = worker34.getQualifications();
        int int38 = worker34.getWorkload();
        java.lang.String str39 = worker34.toString();
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(workerDTO35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0:0:2:10" + "'", str39, "hi!:0:0:0:2:10");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:10");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!:0:0:0:2:0");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!:0:0:0:2:100");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company6.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = company1.createProject("hi!:0:0:0:2:100", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: {Company.java} No constructor fields may be null.");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }
}

